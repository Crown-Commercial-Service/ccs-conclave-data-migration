{
  "openapi": "3.0.1",
  "info": {
    "title": "CcsSso.WrapperApi",
    "version": "v1"
  },
  "paths": {
    "/configurations/identity-providers": {
      "get": {
        "tags": [
            "Configuration"
        ],
        "summary": "Allows a user to get identity provider details",
        "description": "Sample request:\r\n            \r\n    GET configurations/identity-providers",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityProviderDetail"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityProviderDetail"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityProviderDetail"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          }
        }
      }
    },
    "/configurations/roles": {
      "get": {
        "tags": [
            "Configuration"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganisationRole"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganisationRole"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganisationRole"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/configurations/services": {
      "get": {
        "tags": [
            "Configuration"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CcsServiceInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CcsServiceInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CcsServiceInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/configurations/services/{clientId}": {
      "get": {
        "tags": [
            "Configuration"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organisation-id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceProfile"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceProfile"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceProfile"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/contact-types": {
      "get": {
        "tags": [
            "Contact"
        ],
        "summary": "Get contact types",
        "description": "Sample request:\r\n            \r\n    GET contacts/contact-types",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponseDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponseDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponseDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/contacts/contact-reasons": {
      "get": {
        "tags": [
            "Contact"
        ],
        "summary": "Allows a user to get contact reasons",
        "description": "Sample request:\r\n            \r\n    GET contacts/contact-reasons",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactReasonInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactReasonInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactReasonInfo"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/contacts": {
      "post": {
        "tags": [
            "Contact"
        ],
        "summary": "Create contact details",
        "description": "Sample request:\r\n            \r\n    POST contacts\r\n    {\r\n       \"contactType\": \"EMAIL\",\r\n       \"contactValue\": \"contact@mail.com\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestDetail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestDetail"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: INVALID_CONTACT_TYPE, INVALID_CONTACT_VALUE"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
            "Contact"
        ],
        "summary": "Get contact details",
        "description": "Sample request:\r\n            \r\n    GET contacts/1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponseDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponseDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponseDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "tags": [
            "Contact"
        ],
        "summary": "Update contact details",
        "description": "Sample request:\r\n            \r\n    PUT contacts/1\r\n    {\r\n       \"contactType\": \"EMAIL\",\r\n       \"contactValue\": \"contact@mail.com\"\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestDetail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestDetail"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorised"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: INVALID_CONTACT_TYPE, INVALID_CONTACT_VALUE"
          }
        }
      },
      "delete": {
        "tags": [
            "Contact"
        ],
        "summary": "Delete contact details",
        "description": "Sample request:\r\n            \r\n    DELETE contacts/1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorised"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/organisations": {
      "post": {
        "tags": [
            "Organisation"
        ],
        "summary": "Allows a user to create organisation",
        "description": "Sample request:\r\n            \r\n    POST /organisations/\r\n    {\r\n      \"Identifier\": {\r\n        \"legalName\": \"Kier Limited\",\r\n        \"uri\": \"http://data.companieshouse.gov.uk/doc/company/1\"\r\n      },\r\n      \"address\": {\r\n        \"streetAddress\": \"1600 Amphitheatre Pkwy\",\r\n        \"locality\": \"Mountain View.\",\r\n        \"region\": \"CA.\",\r\n        \"postalCode\": \"94043\",\r\n        \"countryCode\": \"UK\"\r\n      },\r\n      \"Detail\": {\r\n        \"organisationId\": \"CiiOrgidId\",\r\n        \"rightToBuy\": \"true\",\r\n        \"is_sme\": 1,\r\n        \"is_vcse\": 1,\r\n        \"active\": 1\r\n      }\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationProfileInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationProfileInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationProfileInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok. Return created organisation id",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes:  INVALID_IDENTIFIER, INVALID_LEGAL_NAME, INVALID_URI, INSUFFICIENT_DETAILS"
          }
        }
      }
    },
    "/organisations/{organisationId}": {
      "get": {
        "tags": [
            "Organisation"
        ],
        "summary": "Get organisation profile details",
        "description": "Sample request:\r\n            \r\n    GET /organisations/CiiOrgidId",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationProfileResponseInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationProfileResponseInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationProfileResponseInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
            "Organisation"
        ],
        "summary": "Allows a user to update organisation",
        "description": "Sample request:\r\n            \r\n    PUT /organisations/CiiOrgidId\r\n    {\r\n      \"Identifier\": {\r\n        \"legalName\": \"Kier Limited\",\r\n        \"uri\": \"http://data.companieshouse.gov.uk/doc/company/1\"\r\n      },\r\n      \"address\": {\r\n        \"streetAddress\": \"1600 Amphitheatre Pkwy\",\r\n        \"locality\": \"Mountain View.\",\r\n        \"region\": \"CA.\",\r\n        \"postalCode\": \"94043\",\r\n        \"countryCode\": \"UK\"\r\n      },\r\n      \"Detail\": {\r\n        \"organisationId\": \"CiiOrgidId\",\r\n        \"rightToBuy\": \"true\",\r\n        \"is_sme\": 1,\r\n        \"is_vcse\": 1,\r\n        \"active\": 1\r\n      }\r\n    }",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationProfileInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationProfileInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationProfileInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorised"
          },
          "404": {
            "description": "Resource not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: INVALID_IDENTIFIER, INVALID_LEGAL_NAME, INVALID_URI, INSUFFICIENT_DETAILS"
          }
        }
      }
    },
    "/organisations/{organisationId}/assigned-contacts": {
      "post": {
        "tags": [
            "Organisation contact"
        ],
        "summary": "Allows a user to assign user/site contacts for an organisation",
        "description": "Sample request:\r\n            \r\n    POST /organisations/1/assigned-contacts\r\n    {\r\n       \"AssigningContactType\": 1, (User:1, Site:2)\r\n       \"AssigningContactPointIds\": [1, 2],\r\n       \"AssigningContactsUserId\": \"user@mail.com\"\r\n    }\r\n            \r\n    POST /organisations/1/contacts/assign\r\n    {\r\n       \"AssigningContactType\": 2, (User:1, Site:2)\r\n       \"AssigningContactPointIds\": [1, 2],\r\n       \"AssigningContactsSiteId\": 1\r\n    }",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAssignmentInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAssignmentInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAssignmentInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok. Return assigned site contact ids",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: ERROR_INVALID_ASSIGNING_CONTACT_POINT_IDS, ERROR_INVALID_CONTACT_ASSIGNEMNT_TYPE, ERROR_INVALID_USER_ID_FOR_CONTACT_ASSIGNEMNT,\r\n             ERROR_INVALID_SITE_ID_FOR_CONTACT_ASSIGNEMNT, ERROR_DUPLICATE_CONTACT_ASSIGNMENT"
          }
        }
      },
      "delete": {
        "tags": [
            "Organisation contact"
        ],
        "summary": "Allows a user to unassign contacts from an organisation.\r\nShould provide the assigned contacts contactpoint ids as a query parameter list",
        "description": "Sample request:\r\n            \r\n    POST /organisations/1/assigned-contacts?contact-point-ids=2",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contact-point-ids",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: ERROR_INVALID_UNASSIGNING_CONTACT_POINT_IDS"
          }
        }
      }
    },
    "/organisations/{organisationId}/contacts": {
      "post": {
        "tags": [
            "Organisation contact"
        ],
        "summary": "Allows a user to create organisation contact",
        "description": "Sample request:\r\n            \r\n    POST /organisations/1/contacts\r\n    {\r\n       \"contactPointReason\": \"BILLING/SHIPPING\",\r\n       \"contactPointName\": \"Test User\",\r\n       \"contacts\": [\r\n          {\r\n            contactType: \"EMAIL\",\r\n            contactValue: \"testuser@mail.com\"\r\n          },\r\n          {\r\n            contactType: \"PHONE\",\r\n            contactValue: \"+551155256325\"\r\n          },\r\n          {\r\n            contactType: \"FAX\",\r\n            contactValue: \"+551155256325\"\r\n          },\r\n          {\r\n            contactType: \"WEB_ADDRESS\",\r\n            contactValue: \"test.com\"\r\n          },\r\n       ]\r\n    }",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok. Return created contact id",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: INSUFFICIENT_DETAILS, INVALID_CONTACT_TYPE, INVALID_EMAIL, INVALID_PHONE_NUMBER"
          }
        }
      },
      "get": {
        "tags": [
            "Organisation contact"
        ],
        "summary": "Allows a user to get organisation contact details",
        "description": "Sample request:\r\n            \r\n    GET organisations/1/contacts",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contact-type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contact-assigned-status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ContactAssignedStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationContactInfoList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationContactInfoList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationContactInfoList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/organisations/{organisationId}/contacts/{contactId}": {
      "get": {
        "tags": [
            "Organisation contact"
        ],
        "summary": "Allows a user to retrieve details for a given organisation contact",
        "description": "Sample request:\r\n            \r\n    GET /organisations/1/contacts/1",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationContactInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationContactInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationContactInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "tags": [
            "Organisation contact"
        ],
        "summary": "Allows a user to edit organisation contact",
        "description": "Sample request:\r\n            \r\n    PUT /organisations/1/contacts/1\r\n    {\r\n       \"contactPointReason\": \"BILLING/SHIPPING\",\r\n       \"contactPointName\": \"Test User\",\r\n       \"contacts\": [\r\n          {\r\n            contactType: \"EMAIL\",\r\n            contactValue: \"testuser@mail.com\"\r\n          },\r\n          {\r\n            contactType: \"PHONE\",\r\n            contactValue: \"+551155256325\"\r\n          },\r\n          {\r\n            contactType: \"FAX\",\r\n            contactValue: \"+551155256325\"\r\n          },\r\n          {\r\n            contactType: \"WEB_ADDRESS\",\r\n            contactValue: \"test.com\"\r\n          },\r\n       ]\r\n    }",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: INSUFFICIENT_DETAILS, INVALID_CONTACT_TYPE, INVALID_EMAIL, INVALID_PHONE_NUMBER"
          }
        }
      },
      "delete": {
        "tags": [
            "Organisation contact"
        ],
        "summary": "Remove a contact from an organisation",
        "description": "Sample request:\r\n            \r\n    DELETE /organisations/1/contacts/1",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/organisations/{organisationId}/sites": {
      "post": {
        "tags": [
            "Organisation site"
        ],
        "summary": "Allows a user to create organisation site",
        "description": "Sample request:\r\n            \r\n    POST /organisations/1/site\r\n    {\r\n      \"siteName\": \"Main Branch\",\r\n      \"address\": {\r\n        \"streetAddress\": \"1600 Amphitheatre Pkwy\",\r\n        \"locality\": \"Mountain View.\",\r\n        \"region\": \"CA.\",\r\n        \"postalCode\": \"94043\",\r\n        \"countryCode\": \"UK\"\r\n      }\r\n    }",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationSiteInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationSiteInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationSiteInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok. Return created site id",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: INVALID_SITE_NAME, INSUFFICIENT_DETAILS"
          }
        }
      },
      "get": {
        "tags": [
            "Organisation site"
        ],
        "summary": "Allows a user to get all the sites in an organisation",
        "description": "Sample request:\r\n            \r\n    GET /organisations/1/site?search-string=sitename",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search-string",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok with site list",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationSiteInfoList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationSiteInfoList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationSiteInfoList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/organisations/{organisationId}/sites/{siteId}": {
      "get": {
        "tags": [
            "Organisation site"
        ],
        "summary": "Allows a user to get organisation site details",
        "description": "Sample request:\r\n            \r\n    GET /organisations/1/site/1",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok with site details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationSiteResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationSiteResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationSiteResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "tags": [
            "Organisation site"
        ],
        "summary": "Allows a user to update organisation site",
        "description": "Sample request:\r\n            \r\n    PUT /organisations/1/site/1\r\n    {\r\n      \"siteName\": \"Main Branch\",\r\n      \"address\": {\r\n        \"streetAddress\": \"1600 Amphitheatre Pkwy\",\r\n        \"locality\": \"Mountain View.\",\r\n        \"region\": \"CA.\",\r\n        \"postalCode\": \"94043\",\r\n        \"countryCode\": \"UK\"\r\n      }\r\n    }",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationSiteInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationSiteInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationSiteInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: INVALID_SITE_NAME, INSUFFICIENT_DETAILS"
          }
        }
      },
      "delete": {
        "tags": [
            "Organisation site"
        ],
        "summary": "Allows a user to delete organisation site",
        "description": "Sample request:\r\n            \r\n    DELETE /organisations/1/site/1",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/organisations/{organisationId}/sites/{siteId}/assigned-contacts": {
      "post": {
        "tags": [
            "Organisation site contact"
        ],
        "summary": "Allows a user to assign user contacts for an organisation site",
        "description": "Sample request:\r\n            \r\n    POST /organisations/1/sites/1/assigned-contacts\r\n    {\r\n       \"AssigningContactType\": 1, (User:1, Site:2 Only user contacts are valid here)\r\n       \"AssigningContactPointIds\": [1, 2],\r\n       \"AssigningContactsUserId\": \"user@mail.com\"\r\n    }",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAssignmentInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAssignmentInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAssignmentInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok. Return assigned site contact ids",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: ERROR_INVALID_ASSIGNING_CONTACT_POINT_IDS, ERROR_INVALID_CONTACT_ASSIGNEMNT_TYPE, ERROR_INVALID_USER_ID_FOR_CONTACT_ASSIGNEMNT, ERROR_DUPLICATE_CONTACT_ASSIGNMENT"
          }
        }
      },
      "delete": {
        "tags": [
            "Organisation site contact"
        ],
        "summary": "Allows a user to unassign contacts from an organisation site.\r\nShould provide the assigned contacts contactpoint ids as a query parameter list",
        "description": "Sample request:\r\n            \r\n    DELETE /organisations/1/sites/1/assigned-contacts?contactPointIds=2",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "contact-point-ids",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: ERROR_INVALID_UNASSIGNING_CONTACT_POINT_IDS"
          }
        }
      }
    },
    "/organisations/{organisationId}/sites/{siteId}/contacts": {
      "post": {
        "tags": [
            "Organisation site contact"
        ],
        "summary": "Allows a user to create organisation site contact",
        "description": "Sample request:\r\n            \r\n    POST /organisations/1/sites/1/contacts\r\n    {\r\n       \"contactPointReason\": \"BILLING/SHIPPING\",\r\n       \"contactPointName\": \"Test User\",\r\n       \"contacts\": [\r\n          {\r\n            contactType: \"EMAIL\",\r\n            contactValue: \"testuser@mail.com\"\r\n          },\r\n          {\r\n            contactType: \"PHONE\",\r\n            contactValue: \"+551155256325\"\r\n          },\r\n          {\r\n            contactType: \"FAX\",\r\n            contactValue: \"+551155256325\"\r\n          },\r\n          {\r\n            contactType: \"WEB_ADDRESS\",\r\n            contactValue: \"test.com\"\r\n          },\r\n       ]\r\n    }",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok. Return created site contact id",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: INSUFFICIENT_DETAILS, INVALID_CONTACT_TYPE, INVALID_EMAIL, INVALID_PHONE_NUMBER"
          }
        }
      },
      "get": {
        "tags": [
            "Organisation site contact"
        ],
        "summary": "Allows a user to get list of contacts for organisation site",
        "description": "Sample request:\r\n            \r\n    GET organisations/1/sites/1/contacts",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "contact-type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contact-assigned-status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ContactAssignedStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationSiteContactInfoList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationSiteContactInfoList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationSiteContactInfoList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/organisations/{organisationId}/sites/{siteId}/contacts/{contactId}": {
      "get": {
        "tags": [
            "Organisation site contact"
        ],
        "summary": "Allows a user to retrieve details for a given organisation site contact",
        "description": "Sample request:\r\n            \r\n    GET /organisations/1/sites/1/contacts/1",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationSiteContactInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationSiteContactInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationSiteContactInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "tags": [
            "Organisation site contact"
        ],
        "summary": "Allows a user to edit organisation site contact",
        "description": "Sample request:\r\n            \r\n    PUT /organisations/1/sites/1/contacts/1\r\n    {\r\n       \"contactPointReason\": \"BILLING/SHIPPING\",\r\n       \"contactPointName\": \"Test User\",\r\n       \"contacts\": [\r\n          {\r\n            contactType: \"EMAIL\",\r\n            contactValue: \"testuser@mail.com\"\r\n          },\r\n          {\r\n            contactType: \"PHONE\",\r\n            contactValue: \"+551155256325\"\r\n          },\r\n          {\r\n            contactType: \"FAX\",\r\n            contactValue: \"+551155256325\"\r\n          },\r\n          {\r\n            contactType: \"WEB_ADDRESS\",\r\n            contactValue: \"test.com\"\r\n          },\r\n       ]\r\n    }",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: INSUFFICIENT_DETAILS, INVALID_CONTACT_TYPE, INVALID_EMAIL, INVALID_PHONE_NUMBER"
          }
        }
      },
      "delete": {
        "tags": [
            "Organisation site contact"
        ],
        "summary": "Remove a contact from an organisation site",
        "description": "Sample request:\r\n            \r\n    DELETE /organisations/1/sites/1/contacts/1",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/organisations/{organisationId}/users": {
      "get": {
        "tags": [
            "Organisation User"
        ],
        "summary": "Allows a user to retrieve users for a given organisation",
        "description": "NOTE:- query params page-size, current-page\r\nSample request:\r\n            \r\n    GET /organisations/1/users?page-size=10,current-page=1",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CurrentPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search-string",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include-self",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/organisations/{organisationId}/groups": {
      "post": {
        "tags": [
            "Organisation Group"
        ],
        "summary": "Create organisation group",
        "description": "Sample request:\r\n            \r\n    POST /organisations/1/groups\r\n    {\r\n      'groupName': \"Group Name\"\r\n    }",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationGroupNameInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationGroupNameInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationGroupNameInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Resource already exists"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: INVALID_GROUP_NAME"
          }
        }
      },
      "get": {
        "tags": [
            "Organisation Group"
        ],
        "summary": "Get organisation groups",
        "description": "Sample request:\r\n            \r\n    GET /organisations/1/groups",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search-string",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationGroupList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationGroupList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationGroupList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "/organisations/{organisationId}/groups/{groupId}": {
      "delete": {
        "tags": [
            "Organisation Group"
        ],
        "summary": "Delete organisation group",
        "description": "Sample request:\r\n            \r\n    DELETE /organisations/1/groups/1",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "get": {
        "tags": [
            "Organisation Group"
        ],
        "summary": "Get organisation group",
        "description": "Sample request:\r\n            \r\n    GET /organisations/1/groups/1",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationGroupResponseInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationGroupResponseInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationGroupResponseInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "patch": {
        "tags": [
            "Organisation Group"
        ],
        "summary": "Update organisation group",
        "description": "Sample requests:\r\n            \r\n    PATCH /organisations/1/groups/1\r\n    {\r\n      'groupName': \"Group Name\",\r\n      'roleInfo': null,\r\n      'userInfo': null\r\n    }\r\n            \r\n    PATCH /organisations/1/groups/1\r\n    {\r\n      'groupName': \"\",\r\n      'roleInfo':{\r\n          'addedRoleIds': [ 1, 2 ],\r\n          'removedRoleIds': [ 3 ]\r\n       },\r\n      'userInfo':{\r\n          'addedUserIds': [ \"user1@mail.com\", \"user2@mail.com\" ],\r\n          'addedUserIds': [ \"user3@mail.com\" ]\r\n       }\r\n    }\r\n            \r\n    PATCH /organisations/1/groups/1\r\n    {\r\n      'groupName': null,\r\n      'roleInfo':{\r\n          'addedRoleIds': [ 1, 2 ],\r\n          'removedRoleIds': [ 3 ]\r\n       },\r\n      'userInfo':{\r\n          'addedUserIds': [ \"user1@mail.com\", \"user2@mail.com\" ],\r\n          'addedUserIds': [ \"user3@mail.com\" ]\r\n       }\r\n    }\r\n            \r\n    PATCH /organisations/1/groups/1\r\n    {\r\n      'groupName': \"Group Name\",\r\n      'roleInfo': null,\r\n      'userInfo':{\r\n          'addedUserIds': [ \"user1@mail.com\", \"user2@mail.com\" ],\r\n          'addedUserIds': [ \"user3@mail.com\" ]\r\n       }\r\n    }\r\n            \r\n    PATCH /organisations/1/groups/1\r\n    {\r\n      'groupName': \"Group Name\",\r\n      'roleInfo':{\r\n          'addedRoleIds': [ 1, 2 ],\r\n          'removedRoleIds': [ 3 ]\r\n       },\r\n      'userInfo': null\r\n    }",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationGroupRequestInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationGroupRequestInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationGroupRequestInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Resource already exists"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: INVALID_ROLE_INFO, INVALID_USER_INFO"
          }
        }
      }
    },
    "/organisations/{organisationId}/identity-providers": {
      "get": {
        "tags": [
            "Organisation"
        ],
        "summary": "Allows a user to get identity provider details of an organisation",
        "description": "Sample request:\r\n            \r\n    GET organisations/1/identity-providers",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityProviderDetail"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityProviderDetail"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityProviderDetail"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
            "Organisation"
        ],
        "summary": "Allows a user to update identity provider details of an organisation",
        "description": "Sample request:\r\n            \r\n    GET organisations/1/identity-providers\r\n    {\r\n      ciiOrganisationId: \"orgid\",\r\n      changedOrgIdentityProviders: [\r\n        {\r\n          id: 1\r\n        }\r\n      ]\r\n     }",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrgIdentityProviderSummary"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrgIdentityProviderSummary"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrgIdentityProviderSummary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "/organisations/{organisationId}/roles": {
      "get": {
        "tags": [
            "Organisation"
        ],
        "summary": "Get organisation roles",
        "description": "Sample request:\r\n            \r\n    GET /organisations/1/roles",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganisationRole"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganisationRole"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganisationRole"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
            "Organisation"
        ],
        "summary": "Update organisation eligible roles",
        "description": "Sample request:\r\n            \r\n    GET /organisations/1/updateEligableRoles\r\n    {\r\n      isBuyer: true,\r\n      rolesToAdd: [\r\n        {\r\n          id: 1\r\n        }\r\n      ],\r\n      rolesToDelete: [\r\n        {\r\n          id: 1\r\n        }\r\n      ]\r\n     }",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationRoleUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationRoleUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationRoleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
            "User"
        ],
        "summary": "Allows a user to create user details",
        "description": "Sample request:\r\n            \r\n    POST /users\r\n    {\r\n       \"firstName\": \"FirstName\",\r\n       \"lastName\": \"LastName\",\r\n       \"userName\": \"user@mail.com\",\r\n       \"password\":\"\",// Not mandatory\r\n       \"SendUserRegistrationEmail\":false,\r\n       \"organisationId\": \"CcsOrgId1\",\r\n       \"detail\": {\r\n          \"id\": 0,\r\n          \"groupIds\": { 1, 2 },\r\n          \"roleIds\": { 1, 2 },\r\n          \"identityProviderId\": 1,\r\n       }\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileEditRequestInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileEditRequestInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileEditRequestInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserEditResponseInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEditResponseInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEditResponseInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: INVALID_USER_ID, INVALID_FIRST_NAME, INVALID_LAST_NAME, INVALID_USER_GROUP_ROLE,ERROR_PASSWORD_TOO_WEAK INVALID_USER_GROUP, INVALID_ROLE, INVALID_IDENTITY_PROVIDER, INVALID_USER_DETAIL"
          }
        }
      },
      "get": {
        "tags": [
            "User"
        ],
        "summary": "Allows a user to retrieve details for a given user",
        "description": "Sample request:\r\n            \r\n    GET /users?user-id=user@mail.com",
        "parameters": [
          {
            "name": "user-id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponseInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponseInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponseInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: INVALID_USER_ID"
          }
        }
      },
      "put": {
        "tags": [
            "User"
        ],
        "summary": "Allows a user to update user details",
        "description": "Sample request:\r\n            \r\n    PUT /users?user-id=user@mail.com\r\n    {\r\n       \"firstName\": \"FirstName\",\r\n       \"lastName\": \"LastName\",\r\n       \"organisationId\": \"CcsOrgId1\",\r\n       \"userName\": \"user@mail.com\",\r\n       \"detail\": {\r\n          \"id\": 1,\r\n          \"groupIds\": { 1, 2},\r\n          \"roleIds\": { 1, 2 },\r\n          \"identityProviderId\": 1,\r\n       }\r\n    }",
        "parameters": [
          {
            "name": "user-id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileEditRequestInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileEditRequestInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileEditRequestInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserEditResponseInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEditResponseInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEditResponseInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: INVALID_USER_ID, INVALID_FIRST_NAME, INVALID_LAST_NAME, INVALID_USER_GROUP_ROLE, INVALID_USER_GROUP, INVALID_ROLE, INVALID_IDENTITY_PROVIDER, ERROR_CANNOT_REMOVE_ADMIN_ROLE_OR_GROUP_OF_LAST_ADMIN, INVALID_USER_DETAIL"
          }
        }
      },
      "delete": {
        "tags": [
            "User"
        ],
        "summary": "Delete a user",
        "description": "Sample request:\r\n            \r\n    DELETE /users?user-id=user@mail.com",
        "parameters": [
          {
            "name": "user-id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: INVALID_USER_ID, ERROR_CANNOT_DELETE_LAST_ADMIN_OF_ORGANISATION"
          }
        }
      }
    },
    "/users/account-verification": {
      "put": {
        "tags": [
            "User"
        ],
        "summary": "Updates user account verify state",
        "description": "Sample request:\r\n            \r\n    PUT /account-verification?user-id=123\r\n    {\r\n    }",
        "parameters": [
          {
            "name": "user-id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserEditResponseInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEditResponseInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEditResponseInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/users/passwords": {
      "put": {
        "tags": [
            "User"
        ],
        "summary": "Reset user password",
        "parameters": [
          {
            "name": "user-id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/users/admin-roles": {
      "delete": {
        "tags": [
            "User"
        ],
        "parameters": [
          {
            "name": "user-id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
            "User"
        ],
        "parameters": [
          {
            "name": "user-id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/users/contacts": {
      "post": {
        "tags": [
            "User contact"
        ],
        "summary": "Allows a user to create user contact details",
        "description": "Sample request:\r\n            \r\n    POST /users/contacts?user-id=user@mail.com\r\n    {\r\n       \"contactPointReason\": \"BILLING/SHIPPING\",\r\n       \"contactPointName\": \"Test User\",\r\n       \"contacts\": [\r\n          {\r\n            contactType: \"EMAIL\",\r\n            contactValue: \"testuser@mail.com\"\r\n          },\r\n          {\r\n            contactType: \"PHONE\",\r\n            contactValue: \"+551155256325\"\r\n          },\r\n          {\r\n            contactType: \"FAX\",\r\n            contactValue: \"+551155256325\"\r\n          },\r\n          {\r\n            contactType: \"WEB_ADDRESS\",\r\n            contactValue: \"test.com\"\r\n          },\r\n       ]\r\n    }",
        "parameters": [
          {
            "name": "user-id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok. Return created contact id",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: INVALID_USER_ID, INSUFFICIENT_DETAILS, INVALID_EMAIL, INVALID_PHONE_NUMBER, INVALID_CONTACT_TYPE"
          }
        }
      },
      "get": {
        "tags": [
            "User contact"
        ],
        "summary": "Allows a user to get user contact details",
        "description": "Sample request:\r\n            \r\n    GET /user-profile/users/contacts?user-id=user@mail.com",
        "parameters": [
          {
            "name": "user-id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserContactInfoList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserContactInfoList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserContactInfoList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: INVALID_USER_ID"
          }
        }
      }
    },
    "/users/contacts/{contactId}": {
      "get": {
        "tags": [
            "User contact"
        ],
        "summary": "Allows a user to retrieve details for a given contact",
        "description": "Sample request:\r\n            \r\n    GET /users/contacts/1?user-id=user@mail.com",
        "parameters": [
          {
            "name": "user-id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserContactInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserContactInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserContactInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: INVALID_USER_ID"
          }
        }
      },
      "put": {
        "tags": [
            "User contact"
        ],
        "summary": "Allows a user to edit user contact details",
        "description": "Sample request:\r\n            \r\n    PUT /users/contacts/1?user-id=user@mail.com\r\n    {\r\n       \"contactPointReason\": \"BILLING/SHIPPING\",\r\n       \"contactPointName\": \"Test User\",\r\n       \"contacts\": [\r\n          {\r\n            contactType: \"EMAIL\",\r\n            contactValue: \"testuser@mail.com\"\r\n          },\r\n          {\r\n            contactType: \"PHONE\",\r\n            contactValue: \"+551155256325\"\r\n          },\r\n          {\r\n            contactType: \"FAX\",\r\n            contactValue: \"+551155256325\"\r\n          },\r\n          {\r\n            contactType: \"WEB_ADDRESS\",\r\n            contactValue: \"test.com\"\r\n          },\r\n       ]\r\n    }",
        "parameters": [
          {
            "name": "user-id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequestInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: INVALID_USER_ID, INSUFFICIENT_DETAILS, INVALID_EMAIL, INVALID_PHONE_NUMBER, INVALID_CONTACT_TYPE"
          }
        }
      },
      "delete": {
        "tags": [
            "User contact"
        ],
        "summary": "Remove a contact from user",
        "description": "Sample request:\r\n            \r\n    DELETE /users/contacts/1?user-id=user@mail.com",
        "parameters": [
          {
            "name": "user-id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "400": {
            "description": "Bad request.\r\n             Error Codes: INVALID_USER_ID"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AssignedContactType": {
        "enum": [
            0,
            1,
            2
        ],
        "type": "integer",
        "format": "int32"
      },
      "CcsServiceInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactAssignedStatus": {
        "enum": [
            0,
            1,
            2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ContactAssignmentInfo": {
        "type": "object",
        "properties": {
          "assigningContactType": {
            "$ref": "#/components/schemas/AssignedContactType"
          },
          "assigningContactPointIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "assigningContactsUserId": {
            "type": "string",
            "nullable": true
          },
          "assigningContactsSiteId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactReasonInfo": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactRequestDetail": {
        "type": "object",
        "properties": {
          "contactType": {
            "type": "string",
            "nullable": true
          },
          "contactValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactRequestInfo": {
        "type": "object",
        "properties": {
          "contactPointReason": {
            "type": "string",
            "nullable": true
          },
          "contactPointName": {
            "type": "string",
            "nullable": true
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactRequestDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactResponseDetail": {
        "type": "object",
        "properties": {
          "contactType": {
            "type": "string",
            "nullable": true
          },
          "contactValue": {
            "type": "string",
            "nullable": true
          },
          "contactId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ContactResponseInfo": {
        "type": "object",
        "properties": {
          "contactPointReason": {
            "type": "string",
            "nullable": true
          },
          "contactPointName": {
            "type": "string",
            "nullable": true
          },
          "contactPointId": {
            "type": "integer",
            "format": "int32"
          },
          "originalContactPointId": {
            "type": "integer",
            "format": "int32"
          },
          "assignedContactType": {
            "$ref": "#/components/schemas/AssignedContactType"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactResponseDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupAccessRole": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "accessRole": {
            "type": "string",
            "nullable": true
          },
          "accessRoleName": {
            "type": "string",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "serviceClientId": {
            "type": "string",
            "nullable": true
          },
          "serviceClientName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupUser": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentityProviderDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "connectionName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationAddress": {
        "type": "object",
        "properties": {
          "streetAddress": {
            "type": "string",
            "nullable": true
          },
          "locality": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationAddressResponse": {
        "type": "object",
        "properties": {
          "streetAddress": {
            "type": "string",
            "nullable": true
          },
          "locality": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationContactInfo": {
        "type": "object",
        "properties": {
          "contactPointReason": {
            "type": "string",
            "nullable": true
          },
          "contactPointName": {
            "type": "string",
            "nullable": true
          },
          "contactPointId": {
            "type": "integer",
            "format": "int32"
          },
          "originalContactPointId": {
            "type": "integer",
            "format": "int32"
          },
          "assignedContactType": {
            "$ref": "#/components/schemas/AssignedContactType"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactResponseDetail"
            },
            "nullable": true
          },
          "detail": {
            "$ref": "#/components/schemas/OrganisationDetailInfo"
          }
        },
        "additionalProperties": false
      },
      "OrganisationContactInfoList": {
        "type": "object",
        "properties": {
          "detail": {
            "$ref": "#/components/schemas/OrganisationDetailInfo"
          },
          "contactPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactResponseInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationDetail": {
        "type": "object",
        "properties": {
          "organisationId": {
            "type": "string",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "nullable": true
          },
          "businessType": {
            "type": "string",
            "nullable": true
          },
          "supplierBuyerType": {
            "type": "integer",
            "format": "int32"
          },
          "isSme": {
            "type": "boolean"
          },
          "isVcse": {
            "type": "boolean"
          },
          "rightToBuy": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "OrganisationDetailInfo": {
        "type": "object",
        "properties": {
          "organisationId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationGroupInfo": {
        "type": "object",
        "properties": {
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationGroupList": {
        "type": "object",
        "properties": {
          "organisationId": {
            "type": "string",
            "nullable": true
          },
          "groupList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganisationGroupInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationGroupNameInfo": {
        "type": "object",
        "properties": {
          "groupName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationGroupRequestInfo": {
        "type": "object",
        "properties": {
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "roleInfo": {
            "$ref": "#/components/schemas/OrganisationGroupRolePatchInfo"
          },
          "userInfo": {
            "$ref": "#/components/schemas/OrganisationGroupUserPatchInfo"
          }
        },
        "additionalProperties": false
      },
      "OrganisationGroupResponseInfo": {
        "type": "object",
        "properties": {
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "nullable": true
          },
          "organisationId": {
            "type": "string",
            "nullable": true
          },
          "mfaEnabled": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupRole"
            },
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupUser"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationGroupRolePatchInfo": {
        "type": "object",
        "properties": {
          "addedRoleIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "removedRoleIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationGroupUserPatchInfo": {
        "type": "object",
        "properties": {
          "addedUserIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "removedUserIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationIdentifier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "legalName": {
            "type": "string",
            "nullable": true
          },
          "uri": {
            "type": "string",
            "nullable": true
          },
          "scheme": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationProfileInfo": {
        "type": "object",
        "properties": {
          "identifier": {
            "$ref": "#/components/schemas/OrganisationIdentifier"
          },
          "address": {
            "$ref": "#/components/schemas/OrganisationAddress"
          },
          "detail": {
            "$ref": "#/components/schemas/OrganisationDetail"
          }
        },
        "additionalProperties": false
      },
      "OrganisationProfileResponseInfo": {
        "type": "object",
        "properties": {
          "identifier": {
            "$ref": "#/components/schemas/OrganisationIdentifier"
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganisationIdentifier"
            },
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/OrganisationAddressResponse"
          },
          "detail": {
            "$ref": "#/components/schemas/OrganisationDetail"
          }
        },
        "additionalProperties": false
      },
      "OrganisationRole": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "roleKey": {
            "type": "string",
            "nullable": true
          },
          "roleName": {
            "type": "string",
            "nullable": true
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "orgTypeEligibility": {
            "$ref": "#/components/schemas/RoleEligibleOrgType"
          },
          "subscriptionTypeEligibility": {
            "$ref": "#/components/schemas/RoleEligibleSubscriptionType"
          },
          "tradeEligibility": {
            "$ref": "#/components/schemas/RoleEligibleTradeType"
          }
        },
        "additionalProperties": false
      },
      "OrganisationRoleUpdate": {
        "type": "object",
        "properties": {
          "isBuyer": {
            "type": "boolean"
          },
          "rolesToAdd": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganisationRole"
            },
            "nullable": true
          },
          "rolesToDelete": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganisationRole"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationSite": {
        "type": "object",
        "properties": {
          "siteName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/OrganisationAddressResponse"
          },
          "details": {
            "$ref": "#/components/schemas/SiteDetail"
          }
        },
        "additionalProperties": false
      },
      "OrganisationSiteContactInfo": {
        "type": "object",
        "properties": {
          "contactPointReason": {
            "type": "string",
            "nullable": true
          },
          "contactPointName": {
            "type": "string",
            "nullable": true
          },
          "contactPointId": {
            "type": "integer",
            "format": "int32"
          },
          "originalContactPointId": {
            "type": "integer",
            "format": "int32"
          },
          "assignedContactType": {
            "$ref": "#/components/schemas/AssignedContactType"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactResponseDetail"
            },
            "nullable": true
          },
          "detail": {
            "$ref": "#/components/schemas/SiteDetailInfo"
          }
        },
        "additionalProperties": false
      },
      "OrganisationSiteContactInfoList": {
        "type": "object",
        "properties": {
          "detail": {
            "$ref": "#/components/schemas/SiteDetailInfo"
          },
          "contactPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactResponseInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationSiteInfo": {
        "type": "object",
        "properties": {
          "siteName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/OrganisationAddress"
          }
        },
        "additionalProperties": false
      },
      "OrganisationSiteInfoList": {
        "type": "object",
        "properties": {
          "organisationId": {
            "type": "string",
            "nullable": true
          },
          "sites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganisationSite"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationSiteResponse": {
        "type": "object",
        "properties": {
          "siteName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/OrganisationAddressResponse"
          },
          "details": {
            "$ref": "#/components/schemas/SiteDetail"
          },
          "organisationId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrgIdentityProvider": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "connectionName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "OrgIdentityProviderSummary": {
        "type": "object",
        "properties": {
          "ciiOrganisationId": {
            "type": "string",
            "nullable": true
          },
          "changedOrgIdentityProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrgIdentityProvider"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleEligibleOrgType": {
        "enum": [
            0,
            1,
            2
        ],
        "type": "integer",
        "format": "int32"
      },
      "RoleEligibleSubscriptionType": {
        "enum": [
            0,
            1
        ],
        "type": "integer",
        "format": "int32"
      },
      "RoleEligibleTradeType": {
        "enum": [
            0,
            1,
            2
        ],
        "type": "integer",
        "format": "int32"
      },
      "RolePermissionInfo": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "roleName": {
            "type": "string",
            "nullable": true
          },
          "roleKey": {
            "type": "string",
            "nullable": true
          },
          "serviceClientId": {
            "type": "string",
            "nullable": true
          },
          "serviceClientName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceProfile": {
        "type": "object",
        "properties": {
          "serviceId": {
            "type": "integer",
            "format": "int32"
          },
          "audience": {
            "type": "string",
            "nullable": true
          },
          "roleKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SiteDetail": {
        "type": "object",
        "properties": {
          "siteId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SiteDetailInfo": {
        "type": "object",
        "properties": {
          "siteId": {
            "type": "integer",
            "format": "int32"
          },
          "organisationId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserContactInfo": {
        "type": "object",
        "properties": {
          "contactPointReason": {
            "type": "string",
            "nullable": true
          },
          "contactPointName": {
            "type": "string",
            "nullable": true
          },
          "contactPointId": {
            "type": "integer",
            "format": "int32"
          },
          "originalContactPointId": {
            "type": "integer",
            "format": "int32"
          },
          "assignedContactType": {
            "$ref": "#/components/schemas/AssignedContactType"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactResponseDetail"
            },
            "nullable": true
          },
          "detail": {
            "$ref": "#/components/schemas/UserDetailInfo"
          }
        },
        "additionalProperties": false
      },
      "UserContactInfoList": {
        "type": "object",
        "properties": {
          "detail": {
            "$ref": "#/components/schemas/UserDetailInfo"
          },
          "contactPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactResponseInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDetailInfo": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "organisationId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserEditResponseInfo": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "isRegisteredInIdam": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserIdentityProviderInfo": {
        "type": "object",
        "properties": {
          "identityProviderId": {
            "type": "integer",
            "format": "int32"
          },
          "identityProvider": {
            "type": "string",
            "nullable": true
          },
          "identityProviderDisplayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserListInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserListResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageCount": {
            "type": "integer",
            "format": "int32"
          },
          "rowCount": {
            "type": "integer",
            "format": "int32"
          },
          "organisationId": {
            "type": "string",
            "nullable": true
          },
          "userList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserListInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserProfileEditRequestInfo": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "organisationId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "$ref": "#/components/schemas/UserTitle"
          },
          "mfaEnabled": {
            "type": "boolean"
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "accountVerified": {
            "type": "boolean"
          },
          "sendUserRegistrationEmail": {
            "type": "boolean"
          },
          "detail": {
            "$ref": "#/components/schemas/UserRequestDetail"
          }
        },
        "additionalProperties": false
      },
      "UserProfileResponseInfo": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "organisationId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "$ref": "#/components/schemas/UserTitle"
          },
          "mfaEnabled": {
            "type": "boolean"
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "accountVerified": {
            "type": "boolean"
          },
          "sendUserRegistrationEmail": {
            "type": "boolean"
          },
          "detail": {
            "$ref": "#/components/schemas/UserResponseDetail"
          }
        },
        "additionalProperties": false
      },
      "UserRequestDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "groupIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "roleIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "identityProviderIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserResponseDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupAccessRole"
            },
            "nullable": true
          },
          "canChangePassword": {
            "type": "boolean"
          },
          "rolePermissionInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RolePermissionInfo"
            },
            "nullable": true
          },
          "identityProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserIdentityProviderInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserTitle": {
        "enum": [
            0,
            1,
            2,
            3,
            4,
            5
        ],
        "type": "integer",
        "format": "int32"
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "name": "X-API-KEY",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "ApiKey": [ ]
    }
  ]
}