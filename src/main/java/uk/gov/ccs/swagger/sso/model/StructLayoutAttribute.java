/*
 * CcsSso.OrganisationApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uk.gov.ccs.swagger.sso.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import uk.gov.ccs.swagger.sso.model.LayoutKind;
/**
 * StructLayoutAttribute
 */


public class StructLayoutAttribute {
  @SerializedName("typeId")
  private Object typeId = null;

  @SerializedName("value")
  private LayoutKind value = null;

   /**
   * Get typeId
   * @return typeId
  **/
  @Schema(description = "")
  public Object getTypeId() {
    return typeId;
  }

  public StructLayoutAttribute value(LayoutKind value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @Schema(description = "")
  public LayoutKind getValue() {
    return value;
  }

  public void setValue(LayoutKind value) {
    this.value = value;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StructLayoutAttribute structLayoutAttribute = (StructLayoutAttribute) o;
    return Objects.equals(this.typeId, structLayoutAttribute.typeId) &&
        Objects.equals(this.value, structLayoutAttribute.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(typeId, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StructLayoutAttribute {\n");
    
    sb.append("    typeId: ").append(toIndentedString(typeId)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
