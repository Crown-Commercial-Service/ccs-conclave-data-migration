/*
 * CcsSso.OrganisationApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uk.gov.ccs.swagger.sso.api;

import uk.gov.ccs.swagger.sso.ApiCallback;
import uk.gov.ccs.swagger.sso.ApiClient;
import uk.gov.ccs.swagger.sso.ApiException;
import uk.gov.ccs.swagger.sso.ApiResponse;
import uk.gov.ccs.swagger.sso.Configuration;
import uk.gov.ccs.swagger.sso.Pair;
import uk.gov.ccs.swagger.sso.ProgressRequestBody;
import uk.gov.ccs.swagger.sso.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import uk.gov.ccs.swagger.sso.model.BulkUploadStatusResponse;
import java.io.File;
import uk.gov.ccs.swagger.sso.model.OrganisationUserListResponse;
import uk.gov.ccs.swagger.sso.model.UserListResponseInfo;
import uk.gov.ccs.swagger.sso.model.UserListWithServiceGroupRoleResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OrganisationUserApi {
    private ApiClient apiClient;

    public OrganisationUserApi() {
        this(Configuration.getDefaultApiClient());
    }

    public OrganisationUserApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for organisationProfileOrganisationIdUploadPost
     * @param organisationId  (required)
     * @param file  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdUploadPostCall(String organisationId, File file, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/{organisationId}/upload"
            .replaceAll("\\{" + "organisationId" + "\\}", apiClient.escapeString(organisationId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        if (file != null)
        localVarFormParams.put("file", file);

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "multipart/form-data"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileOrganisationIdUploadPostValidateBeforeCall(String organisationId, File file, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'organisationId' is set
        if (organisationId == null) {
            throw new ApiException("Missing the required parameter 'organisationId' when calling organisationProfileOrganisationIdUploadPost(Async)");
        }
        
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdUploadPostCall(organisationId, file, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * File upload for bulk user creation for organisation
     * Sample request:                    POST /organisation-profile/1/upload
     * @param organisationId  (required)
     * @param file  (optional)
     * @return BulkUploadStatusResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public BulkUploadStatusResponse organisationProfileOrganisationIdUploadPost(String organisationId, File file) throws ApiException {
        ApiResponse<BulkUploadStatusResponse> resp = organisationProfileOrganisationIdUploadPostWithHttpInfo(organisationId, file);
        return resp.getData();
    }

    /**
     * File upload for bulk user creation for organisation
     * Sample request:                    POST /organisation-profile/1/upload
     * @param organisationId  (required)
     * @param file  (optional)
     * @return ApiResponse&lt;BulkUploadStatusResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<BulkUploadStatusResponse> organisationProfileOrganisationIdUploadPostWithHttpInfo(String organisationId, File file) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdUploadPostValidateBeforeCall(organisationId, file, null, null);
        Type localVarReturnType = new TypeToken<BulkUploadStatusResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * File upload for bulk user creation for organisation (asynchronously)
     * Sample request:                    POST /organisation-profile/1/upload
     * @param organisationId  (required)
     * @param file  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdUploadPostAsync(String organisationId, File file, final ApiCallback<BulkUploadStatusResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileOrganisationIdUploadPostValidateBeforeCall(organisationId, file, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<BulkUploadStatusResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for organisationProfileOrganisationIdUploadStatusIdGet
     * @param organisationId  (required)
     * @param id  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdUploadStatusIdGetCall(String organisationId, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/{organisationId}/upload-status/{id}"
            .replaceAll("\\{" + "organisationId" + "\\}", apiClient.escapeString(organisationId.toString()))
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileOrganisationIdUploadStatusIdGetValidateBeforeCall(String organisationId, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'organisationId' is set
        if (organisationId == null) {
            throw new ApiException("Missing the required parameter 'organisationId' when calling organisationProfileOrganisationIdUploadStatusIdGet(Async)");
        }
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling organisationProfileOrganisationIdUploadStatusIdGet(Async)");
        }
        
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdUploadStatusIdGetCall(organisationId, id, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get bulk user creation file upload status
     * Sample request:        GET /organisation-profile/1/upload-status?id&#x3D;1
     * @param organisationId  (required)
     * @param id  (required)
     * @return BulkUploadStatusResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public BulkUploadStatusResponse organisationProfileOrganisationIdUploadStatusIdGet(String organisationId, String id) throws ApiException {
        ApiResponse<BulkUploadStatusResponse> resp = organisationProfileOrganisationIdUploadStatusIdGetWithHttpInfo(organisationId, id);
        return resp.getData();
    }

    /**
     * Get bulk user creation file upload status
     * Sample request:        GET /organisation-profile/1/upload-status?id&#x3D;1
     * @param organisationId  (required)
     * @param id  (required)
     * @return ApiResponse&lt;BulkUploadStatusResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<BulkUploadStatusResponse> organisationProfileOrganisationIdUploadStatusIdGetWithHttpInfo(String organisationId, String id) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdUploadStatusIdGetValidateBeforeCall(organisationId, id, null, null);
        Type localVarReturnType = new TypeToken<BulkUploadStatusResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get bulk user creation file upload status (asynchronously)
     * Sample request:        GET /organisation-profile/1/upload-status?id&#x3D;1
     * @param organisationId  (required)
     * @param id  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdUploadStatusIdGetAsync(String organisationId, String id, final ApiCallback<BulkUploadStatusResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileOrganisationIdUploadStatusIdGetValidateBeforeCall(organisationId, id, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<BulkUploadStatusResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for organisationProfileOrganisationIdUsersGet
     * @param organisationId  (required)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param searchString  (optional)
     * @param delegatedOnly  (optional)
     * @param delegatedExpiredOnly  (optional)
     * @param isAdmin  (optional)
     * @param includeUnverifiedAdmin  (optional)
     * @param includeSelf  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdUsersGetCall(String organisationId, Integer pageSize, Integer currentPage, Boolean isPagination, String searchString, Boolean delegatedOnly, Boolean delegatedExpiredOnly, Boolean isAdmin, Boolean includeUnverifiedAdmin, Boolean includeSelf, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/{organisationId}/users"
            .replaceAll("\\{" + "organisationId" + "\\}", apiClient.escapeString(organisationId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (pageSize != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("PageSize", pageSize));
        if (currentPage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("CurrentPage", currentPage));
        if (isPagination != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("IsPagination", isPagination));
        if (searchString != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("search-string", searchString));
        if (delegatedOnly != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("delegated-only", delegatedOnly));
        if (delegatedExpiredOnly != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("delegated-expired-only", delegatedExpiredOnly));
        if (isAdmin != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("isAdmin", isAdmin));
        if (includeUnverifiedAdmin != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("include-unverified-admin", includeUnverifiedAdmin));
        if (includeSelf != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("include-self", includeSelf));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileOrganisationIdUsersGetValidateBeforeCall(String organisationId, Integer pageSize, Integer currentPage, Boolean isPagination, String searchString, Boolean delegatedOnly, Boolean delegatedExpiredOnly, Boolean isAdmin, Boolean includeUnverifiedAdmin, Boolean includeSelf, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'organisationId' is set
        if (organisationId == null) {
            throw new ApiException("Missing the required parameter 'organisationId' when calling organisationProfileOrganisationIdUsersGet(Async)");
        }
        
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdUsersGetCall(organisationId, pageSize, currentPage, isPagination, searchString, delegatedOnly, delegatedExpiredOnly, isAdmin, includeUnverifiedAdmin, includeSelf, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Allows a user to retrieve users for a given organisation  #Delegated
     * Sample request:                    GET /organisation-profile/1/users?page-size&#x3D;10,current-page&#x3D;1
     * @param organisationId  (required)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param searchString  (optional)
     * @param delegatedOnly  (optional)
     * @param delegatedExpiredOnly  (optional)
     * @param isAdmin  (optional)
     * @param includeUnverifiedAdmin  (optional)
     * @param includeSelf  (optional)
     * @return UserListResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public UserListResponseInfo organisationProfileOrganisationIdUsersGet(String organisationId, Integer pageSize, Integer currentPage, Boolean isPagination, String searchString, Boolean delegatedOnly, Boolean delegatedExpiredOnly, Boolean isAdmin, Boolean includeUnverifiedAdmin, Boolean includeSelf) throws ApiException {
        ApiResponse<UserListResponseInfo> resp = organisationProfileOrganisationIdUsersGetWithHttpInfo(organisationId, pageSize, currentPage, isPagination, searchString, delegatedOnly, delegatedExpiredOnly, isAdmin, includeUnverifiedAdmin, includeSelf);
        return resp.getData();
    }

    /**
     * Allows a user to retrieve users for a given organisation  #Delegated
     * Sample request:                    GET /organisation-profile/1/users?page-size&#x3D;10,current-page&#x3D;1
     * @param organisationId  (required)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param searchString  (optional)
     * @param delegatedOnly  (optional)
     * @param delegatedExpiredOnly  (optional)
     * @param isAdmin  (optional)
     * @param includeUnverifiedAdmin  (optional)
     * @param includeSelf  (optional)
     * @return ApiResponse&lt;UserListResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<UserListResponseInfo> organisationProfileOrganisationIdUsersGetWithHttpInfo(String organisationId, Integer pageSize, Integer currentPage, Boolean isPagination, String searchString, Boolean delegatedOnly, Boolean delegatedExpiredOnly, Boolean isAdmin, Boolean includeUnverifiedAdmin, Boolean includeSelf) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdUsersGetValidateBeforeCall(organisationId, pageSize, currentPage, isPagination, searchString, delegatedOnly, delegatedExpiredOnly, isAdmin, includeUnverifiedAdmin, includeSelf, null, null);
        Type localVarReturnType = new TypeToken<UserListResponseInfo>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Allows a user to retrieve users for a given organisation  #Delegated (asynchronously)
     * Sample request:                    GET /organisation-profile/1/users?page-size&#x3D;10,current-page&#x3D;1
     * @param organisationId  (required)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param searchString  (optional)
     * @param delegatedOnly  (optional)
     * @param delegatedExpiredOnly  (optional)
     * @param isAdmin  (optional)
     * @param includeUnverifiedAdmin  (optional)
     * @param includeSelf  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdUsersGetAsync(String organisationId, Integer pageSize, Integer currentPage, Boolean isPagination, String searchString, Boolean delegatedOnly, Boolean delegatedExpiredOnly, Boolean isAdmin, Boolean includeUnverifiedAdmin, Boolean includeSelf, final ApiCallback<UserListResponseInfo> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileOrganisationIdUsersGetValidateBeforeCall(organisationId, pageSize, currentPage, isPagination, searchString, delegatedOnly, delegatedExpiredOnly, isAdmin, includeUnverifiedAdmin, includeSelf, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<UserListResponseInfo>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for organisationProfileOrganisationIdUsersV1Get
     * @param organisationId  (required)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param searchString  (optional)
     * @param delegatedOnly  (optional)
     * @param delegatedExpiredOnly  (optional)
     * @param isAdmin  (optional)
     * @param includeUnverifiedAdmin  (optional)
     * @param includeSelf  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdUsersV1GetCall(String organisationId, Integer pageSize, Integer currentPage, Boolean isPagination, String searchString, Boolean delegatedOnly, Boolean delegatedExpiredOnly, Boolean isAdmin, Boolean includeUnverifiedAdmin, Boolean includeSelf, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/{organisationId}/users/v1"
            .replaceAll("\\{" + "organisationId" + "\\}", apiClient.escapeString(organisationId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (pageSize != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("PageSize", pageSize));
        if (currentPage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("CurrentPage", currentPage));
        if (isPagination != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("IsPagination", isPagination));
        if (searchString != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("search-string", searchString));
        if (delegatedOnly != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("delegated-only", delegatedOnly));
        if (delegatedExpiredOnly != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("delegated-expired-only", delegatedExpiredOnly));
        if (isAdmin != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("isAdmin", isAdmin));
        if (includeUnverifiedAdmin != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("include-unverified-admin", includeUnverifiedAdmin));
        if (includeSelf != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("include-self", includeSelf));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileOrganisationIdUsersV1GetValidateBeforeCall(String organisationId, Integer pageSize, Integer currentPage, Boolean isPagination, String searchString, Boolean delegatedOnly, Boolean delegatedExpiredOnly, Boolean isAdmin, Boolean includeUnverifiedAdmin, Boolean includeSelf, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'organisationId' is set
        if (organisationId == null) {
            throw new ApiException("Missing the required parameter 'organisationId' when calling organisationProfileOrganisationIdUsersV1Get(Async)");
        }
        
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdUsersV1GetCall(organisationId, pageSize, currentPage, isPagination, searchString, delegatedOnly, delegatedExpiredOnly, isAdmin, includeUnverifiedAdmin, includeSelf, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Retrieve user details with service role groups.
     * Sample request:                    GET /organisation-profile/1/users/v1?page-size&#x3D;10,current-page&#x3D;1
     * @param organisationId  (required)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param searchString  (optional)
     * @param delegatedOnly  (optional)
     * @param delegatedExpiredOnly  (optional)
     * @param isAdmin  (optional)
     * @param includeUnverifiedAdmin  (optional)
     * @param includeSelf  (optional)
     * @return UserListWithServiceGroupRoleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public UserListWithServiceGroupRoleResponse organisationProfileOrganisationIdUsersV1Get(String organisationId, Integer pageSize, Integer currentPage, Boolean isPagination, String searchString, Boolean delegatedOnly, Boolean delegatedExpiredOnly, Boolean isAdmin, Boolean includeUnverifiedAdmin, Boolean includeSelf) throws ApiException {
        ApiResponse<UserListWithServiceGroupRoleResponse> resp = organisationProfileOrganisationIdUsersV1GetWithHttpInfo(organisationId, pageSize, currentPage, isPagination, searchString, delegatedOnly, delegatedExpiredOnly, isAdmin, includeUnverifiedAdmin, includeSelf);
        return resp.getData();
    }

    /**
     * Retrieve user details with service role groups.
     * Sample request:                    GET /organisation-profile/1/users/v1?page-size&#x3D;10,current-page&#x3D;1
     * @param organisationId  (required)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param searchString  (optional)
     * @param delegatedOnly  (optional)
     * @param delegatedExpiredOnly  (optional)
     * @param isAdmin  (optional)
     * @param includeUnverifiedAdmin  (optional)
     * @param includeSelf  (optional)
     * @return ApiResponse&lt;UserListWithServiceGroupRoleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<UserListWithServiceGroupRoleResponse> organisationProfileOrganisationIdUsersV1GetWithHttpInfo(String organisationId, Integer pageSize, Integer currentPage, Boolean isPagination, String searchString, Boolean delegatedOnly, Boolean delegatedExpiredOnly, Boolean isAdmin, Boolean includeUnverifiedAdmin, Boolean includeSelf) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdUsersV1GetValidateBeforeCall(organisationId, pageSize, currentPage, isPagination, searchString, delegatedOnly, delegatedExpiredOnly, isAdmin, includeUnverifiedAdmin, includeSelf, null, null);
        Type localVarReturnType = new TypeToken<UserListWithServiceGroupRoleResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Retrieve user details with service role groups. (asynchronously)
     * Sample request:                    GET /organisation-profile/1/users/v1?page-size&#x3D;10,current-page&#x3D;1
     * @param organisationId  (required)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param searchString  (optional)
     * @param delegatedOnly  (optional)
     * @param delegatedExpiredOnly  (optional)
     * @param isAdmin  (optional)
     * @param includeUnverifiedAdmin  (optional)
     * @param includeSelf  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdUsersV1GetAsync(String organisationId, Integer pageSize, Integer currentPage, Boolean isPagination, String searchString, Boolean delegatedOnly, Boolean delegatedExpiredOnly, Boolean isAdmin, Boolean includeUnverifiedAdmin, Boolean includeSelf, final ApiCallback<UserListWithServiceGroupRoleResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileOrganisationIdUsersV1GetValidateBeforeCall(organisationId, pageSize, currentPage, isPagination, searchString, delegatedOnly, delegatedExpiredOnly, isAdmin, includeUnverifiedAdmin, includeSelf, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<UserListWithServiceGroupRoleResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for organisationProfileUsersGet
     * @param organisationId  (optional)
     * @param name  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileUsersGetCall(String organisationId, String name, Integer pageSize, Integer currentPage, Boolean isPagination, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/users";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (organisationId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("organisation-id", organisationId));
        if (name != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("name", name));
        if (pageSize != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("PageSize", pageSize));
        if (currentPage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("CurrentPage", currentPage));
        if (isPagination != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("IsPagination", isPagination));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileUsersGetValidateBeforeCall(String organisationId, String name, Integer pageSize, Integer currentPage, Boolean isPagination, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = organisationProfileUsersGetCall(organisationId, name, pageSize, currentPage, isPagination, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Retrieve List of users based on search
     * Sample request:                    GET /organisation-profile/users?organisation-id&#x3D;1,name&#x3D;test,page-size&#x3D;1,current-page&#x3D;1
     * @param organisationId  (optional)
     * @param name  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @return OrganisationUserListResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OrganisationUserListResponse organisationProfileUsersGet(String organisationId, String name, Integer pageSize, Integer currentPage, Boolean isPagination) throws ApiException {
        ApiResponse<OrganisationUserListResponse> resp = organisationProfileUsersGetWithHttpInfo(organisationId, name, pageSize, currentPage, isPagination);
        return resp.getData();
    }

    /**
     * Retrieve List of users based on search
     * Sample request:                    GET /organisation-profile/users?organisation-id&#x3D;1,name&#x3D;test,page-size&#x3D;1,current-page&#x3D;1
     * @param organisationId  (optional)
     * @param name  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @return ApiResponse&lt;OrganisationUserListResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OrganisationUserListResponse> organisationProfileUsersGetWithHttpInfo(String organisationId, String name, Integer pageSize, Integer currentPage, Boolean isPagination) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileUsersGetValidateBeforeCall(organisationId, name, pageSize, currentPage, isPagination, null, null);
        Type localVarReturnType = new TypeToken<OrganisationUserListResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Retrieve List of users based on search (asynchronously)
     * Sample request:                    GET /organisation-profile/users?organisation-id&#x3D;1,name&#x3D;test,page-size&#x3D;1,current-page&#x3D;1
     * @param organisationId  (optional)
     * @param name  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileUsersGetAsync(String organisationId, String name, Integer pageSize, Integer currentPage, Boolean isPagination, final ApiCallback<OrganisationUserListResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileUsersGetValidateBeforeCall(organisationId, name, pageSize, currentPage, isPagination, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OrganisationUserListResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
