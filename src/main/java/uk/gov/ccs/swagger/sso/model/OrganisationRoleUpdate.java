/*
 * CcsSso.WrapperApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uk.gov.ccs.swagger.sso.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import uk.gov.ccs.swagger.sso.model.OrganisationRole;
/**
 * OrganisationRoleUpdate
 */


public class OrganisationRoleUpdate {
  @SerializedName("isBuyer")
  private Boolean isBuyer = null;

  @SerializedName("rolesToAdd")
  private List<OrganisationRole> rolesToAdd = null;

  @SerializedName("rolesToDelete")
  private List<OrganisationRole> rolesToDelete = null;

  public OrganisationRoleUpdate isBuyer(Boolean isBuyer) {
    this.isBuyer = isBuyer;
    return this;
  }

   /**
   * Get isBuyer
   * @return isBuyer
  **/
  @Schema(description = "")
  public Boolean isIsBuyer() {
    return isBuyer;
  }

  public void setIsBuyer(Boolean isBuyer) {
    this.isBuyer = isBuyer;
  }

  public OrganisationRoleUpdate rolesToAdd(List<OrganisationRole> rolesToAdd) {
    this.rolesToAdd = rolesToAdd;
    return this;
  }

  public OrganisationRoleUpdate addRolesToAddItem(OrganisationRole rolesToAddItem) {
    if (this.rolesToAdd == null) {
      this.rolesToAdd = new ArrayList<OrganisationRole>();
    }
    this.rolesToAdd.add(rolesToAddItem);
    return this;
  }

   /**
   * Get rolesToAdd
   * @return rolesToAdd
  **/
  @Schema(description = "")
  public List<OrganisationRole> getRolesToAdd() {
    return rolesToAdd;
  }

  public void setRolesToAdd(List<OrganisationRole> rolesToAdd) {
    this.rolesToAdd = rolesToAdd;
  }

  public OrganisationRoleUpdate rolesToDelete(List<OrganisationRole> rolesToDelete) {
    this.rolesToDelete = rolesToDelete;
    return this;
  }

  public OrganisationRoleUpdate addRolesToDeleteItem(OrganisationRole rolesToDeleteItem) {
    if (this.rolesToDelete == null) {
      this.rolesToDelete = new ArrayList<OrganisationRole>();
    }
    this.rolesToDelete.add(rolesToDeleteItem);
    return this;
  }

   /**
   * Get rolesToDelete
   * @return rolesToDelete
  **/
  @Schema(description = "")
  public List<OrganisationRole> getRolesToDelete() {
    return rolesToDelete;
  }

  public void setRolesToDelete(List<OrganisationRole> rolesToDelete) {
    this.rolesToDelete = rolesToDelete;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrganisationRoleUpdate organisationRoleUpdate = (OrganisationRoleUpdate) o;
    return Objects.equals(this.isBuyer, organisationRoleUpdate.isBuyer) &&
        Objects.equals(this.rolesToAdd, organisationRoleUpdate.rolesToAdd) &&
        Objects.equals(this.rolesToDelete, organisationRoleUpdate.rolesToDelete);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isBuyer, rolesToAdd, rolesToDelete);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrganisationRoleUpdate {\n");
    
    sb.append("    isBuyer: ").append(toIndentedString(isBuyer)).append("\n");
    sb.append("    rolesToAdd: ").append(toIndentedString(rolesToAdd)).append("\n");
    sb.append("    rolesToDelete: ").append(toIndentedString(rolesToDelete)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
