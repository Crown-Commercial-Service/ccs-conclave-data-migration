/*
 * CcsSso.ContactApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uk.gov.ccs.swagger.sso.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import uk.gov.ccs.swagger.sso.model.AssignedContactType;
/**
 * ContactAssignmentWithOrgInfo
 */


public class ContactAssignmentWithOrgInfo {
  @SerializedName("assigningContactType")
  private AssignedContactType assigningContactType = null;

  @SerializedName("assigningContactPointIds")
  private List<Integer> assigningContactPointIds = null;

  @SerializedName("assigningContactsUserId")
  private String assigningContactsUserId = null;

  @SerializedName("assigningContactsSiteId")
  private Integer assigningContactsSiteId = null;

  @SerializedName("organisationPartyId")
  private Integer organisationPartyId = null;

  @SerializedName("partyTypeId")
  private Integer partyTypeId = null;

  public ContactAssignmentWithOrgInfo assigningContactType(AssignedContactType assigningContactType) {
    this.assigningContactType = assigningContactType;
    return this;
  }

   /**
   * Get assigningContactType
   * @return assigningContactType
  **/
  @Schema(description = "")
  public AssignedContactType getAssigningContactType() {
    return assigningContactType;
  }

  public void setAssigningContactType(AssignedContactType assigningContactType) {
    this.assigningContactType = assigningContactType;
  }

  public ContactAssignmentWithOrgInfo assigningContactPointIds(List<Integer> assigningContactPointIds) {
    this.assigningContactPointIds = assigningContactPointIds;
    return this;
  }

  public ContactAssignmentWithOrgInfo addAssigningContactPointIdsItem(Integer assigningContactPointIdsItem) {
    if (this.assigningContactPointIds == null) {
      this.assigningContactPointIds = new ArrayList<Integer>();
    }
    this.assigningContactPointIds.add(assigningContactPointIdsItem);
    return this;
  }

   /**
   * Get assigningContactPointIds
   * @return assigningContactPointIds
  **/
  @Schema(description = "")
  public List<Integer> getAssigningContactPointIds() {
    return assigningContactPointIds;
  }

  public void setAssigningContactPointIds(List<Integer> assigningContactPointIds) {
    this.assigningContactPointIds = assigningContactPointIds;
  }

  public ContactAssignmentWithOrgInfo assigningContactsUserId(String assigningContactsUserId) {
    this.assigningContactsUserId = assigningContactsUserId;
    return this;
  }

   /**
   * Get assigningContactsUserId
   * @return assigningContactsUserId
  **/
  @Schema(description = "")
  public String getAssigningContactsUserId() {
    return assigningContactsUserId;
  }

  public void setAssigningContactsUserId(String assigningContactsUserId) {
    this.assigningContactsUserId = assigningContactsUserId;
  }

  public ContactAssignmentWithOrgInfo assigningContactsSiteId(Integer assigningContactsSiteId) {
    this.assigningContactsSiteId = assigningContactsSiteId;
    return this;
  }

   /**
   * Get assigningContactsSiteId
   * @return assigningContactsSiteId
  **/
  @Schema(description = "")
  public Integer getAssigningContactsSiteId() {
    return assigningContactsSiteId;
  }

  public void setAssigningContactsSiteId(Integer assigningContactsSiteId) {
    this.assigningContactsSiteId = assigningContactsSiteId;
  }

  public ContactAssignmentWithOrgInfo organisationPartyId(Integer organisationPartyId) {
    this.organisationPartyId = organisationPartyId;
    return this;
  }

   /**
   * Get organisationPartyId
   * @return organisationPartyId
  **/
  @Schema(description = "")
  public Integer getOrganisationPartyId() {
    return organisationPartyId;
  }

  public void setOrganisationPartyId(Integer organisationPartyId) {
    this.organisationPartyId = organisationPartyId;
  }

  public ContactAssignmentWithOrgInfo partyTypeId(Integer partyTypeId) {
    this.partyTypeId = partyTypeId;
    return this;
  }

   /**
   * Get partyTypeId
   * @return partyTypeId
  **/
  @Schema(description = "")
  public Integer getPartyTypeId() {
    return partyTypeId;
  }

  public void setPartyTypeId(Integer partyTypeId) {
    this.partyTypeId = partyTypeId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactAssignmentWithOrgInfo contactAssignmentWithOrgInfo = (ContactAssignmentWithOrgInfo) o;
    return Objects.equals(this.assigningContactType, contactAssignmentWithOrgInfo.assigningContactType) &&
        Objects.equals(this.assigningContactPointIds, contactAssignmentWithOrgInfo.assigningContactPointIds) &&
        Objects.equals(this.assigningContactsUserId, contactAssignmentWithOrgInfo.assigningContactsUserId) &&
        Objects.equals(this.assigningContactsSiteId, contactAssignmentWithOrgInfo.assigningContactsSiteId) &&
        Objects.equals(this.organisationPartyId, contactAssignmentWithOrgInfo.organisationPartyId) &&
        Objects.equals(this.partyTypeId, contactAssignmentWithOrgInfo.partyTypeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assigningContactType, assigningContactPointIds, assigningContactsUserId, assigningContactsSiteId, organisationPartyId, partyTypeId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactAssignmentWithOrgInfo {\n");
    
    sb.append("    assigningContactType: ").append(toIndentedString(assigningContactType)).append("\n");
    sb.append("    assigningContactPointIds: ").append(toIndentedString(assigningContactPointIds)).append("\n");
    sb.append("    assigningContactsUserId: ").append(toIndentedString(assigningContactsUserId)).append("\n");
    sb.append("    assigningContactsSiteId: ").append(toIndentedString(assigningContactsSiteId)).append("\n");
    sb.append("    organisationPartyId: ").append(toIndentedString(organisationPartyId)).append("\n");
    sb.append("    partyTypeId: ").append(toIndentedString(partyTypeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
