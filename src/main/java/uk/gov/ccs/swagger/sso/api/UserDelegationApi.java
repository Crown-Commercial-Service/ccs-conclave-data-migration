/*
 * CcsSso.UserApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uk.gov.ccs.swagger.sso.api;

import uk.gov.ccs.swagger.sso.ApiCallback;
import uk.gov.ccs.swagger.sso.ApiClient;
import uk.gov.ccs.swagger.sso.ApiException;
import uk.gov.ccs.swagger.sso.ApiResponse;
import uk.gov.ccs.swagger.sso.Configuration;
import uk.gov.ccs.swagger.sso.Pair;
import uk.gov.ccs.swagger.sso.ProgressRequestBody;
import uk.gov.ccs.swagger.sso.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import uk.gov.ccs.swagger.sso.model.DelegatedUserProfileRequestInfo;
import uk.gov.ccs.swagger.sso.model.DelegatedUserProfileServiceRoleGroupRequestInfo;
import uk.gov.ccs.swagger.sso.model.DelegationAuditEventRequestInfo;
import uk.gov.ccs.swagger.sso.model.DelegationAuditEventoServiceRoleGroupInfListResponse;
import uk.gov.ccs.swagger.sso.model.DelegationEmailNotificationLogInfo;
import uk.gov.ccs.swagger.sso.model.DelegationUserDto;
import org.threeten.bp.OffsetDateTime;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class UserDelegationApi {
    private ApiClient apiClient;

    public UserDelegationApi() {
        this(Configuration.getDefaultApiClient());
    }

    public UserDelegationApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for userProfileDelegateUserAuditEventPost
     * @param body  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call userProfileDelegateUserAuditEventPostCall(DelegationAuditEventRequestInfo body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/user-profile/delegate-user/audit-event";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/_*+json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call userProfileDelegateUserAuditEventPostValidateBeforeCall(DelegationAuditEventRequestInfo body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = userProfileDelegateUserAuditEventPostCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Create user delegation audit events
     * Sample requests:                    POST /user-profile/delegate-user/audit-events
     * @param body  (optional)
     * @return Boolean
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Boolean userProfileDelegateUserAuditEventPost(DelegationAuditEventRequestInfo body) throws ApiException {
        ApiResponse<Boolean> resp = userProfileDelegateUserAuditEventPostWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Create user delegation audit events
     * Sample requests:                    POST /user-profile/delegate-user/audit-events
     * @param body  (optional)
     * @return ApiResponse&lt;Boolean&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Boolean> userProfileDelegateUserAuditEventPostWithHttpInfo(DelegationAuditEventRequestInfo body) throws ApiException {
        com.squareup.okhttp.Call call = userProfileDelegateUserAuditEventPostValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<Boolean>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Create user delegation audit events (asynchronously)
     * Sample requests:                    POST /user-profile/delegate-user/audit-events
     * @param body  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call userProfileDelegateUserAuditEventPostAsync(DelegationAuditEventRequestInfo body, final ApiCallback<Boolean> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = userProfileDelegateUserAuditEventPostValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Boolean>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for userProfileDelegateUserDelete
     * @param userId  (optional)
     * @param delegatedOrganisationId  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call userProfileDelegateUserDeleteCall(String userId, String delegatedOrganisationId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/user-profile/delegate-user";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (userId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("user-id", userId));
        if (delegatedOrganisationId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("delegated-organisation-id", delegatedOrganisationId));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call userProfileDelegateUserDeleteValidateBeforeCall(String userId, String delegatedOrganisationId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = userProfileDelegateUserDeleteCall(userId, delegatedOrganisationId, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Allows admin to remove/revoke user delegation for organisation
     * Sample request:                    DELETE /user-profile/delegate-user?user-id&#x3D;user@mail.com,organisation-id&#x3D;&#x27;organisation id&#x27;
     * @param userId  (optional)
     * @param delegatedOrganisationId  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void userProfileDelegateUserDelete(String userId, String delegatedOrganisationId) throws ApiException {
        userProfileDelegateUserDeleteWithHttpInfo(userId, delegatedOrganisationId);
    }

    /**
     * Allows admin to remove/revoke user delegation for organisation
     * Sample request:                    DELETE /user-profile/delegate-user?user-id&#x3D;user@mail.com,organisation-id&#x3D;&#x27;organisation id&#x27;
     * @param userId  (optional)
     * @param delegatedOrganisationId  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> userProfileDelegateUserDeleteWithHttpInfo(String userId, String delegatedOrganisationId) throws ApiException {
        com.squareup.okhttp.Call call = userProfileDelegateUserDeleteValidateBeforeCall(userId, delegatedOrganisationId, null, null);
        return apiClient.execute(call);
    }

    /**
     * Allows admin to remove/revoke user delegation for organisation (asynchronously)
     * Sample request:                    DELETE /user-profile/delegate-user?user-id&#x3D;user@mail.com,organisation-id&#x3D;&#x27;organisation id&#x27;
     * @param userId  (optional)
     * @param delegatedOrganisationId  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call userProfileDelegateUserDeleteAsync(String userId, String delegatedOrganisationId, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = userProfileDelegateUserDeleteValidateBeforeCall(userId, delegatedOrganisationId, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for userProfileDelegateUserExpiredGet
     * @param expiryDate  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call userProfileDelegateUserExpiredGetCall(OffsetDateTime expiryDate, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/user-profile/delegate-user/expired";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (expiryDate != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("expiry-date", expiryDate));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call userProfileDelegateUserExpiredGetValidateBeforeCall(OffsetDateTime expiryDate, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = userProfileDelegateUserExpiredGetCall(expiryDate, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get delegation expired users
     * Sample request:                    Get /user-profile/delegate-user/expired
     * @param expiryDate  (optional)
     * @return List&lt;DelegationUserDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<DelegationUserDto> userProfileDelegateUserExpiredGet(OffsetDateTime expiryDate) throws ApiException {
        ApiResponse<List<DelegationUserDto>> resp = userProfileDelegateUserExpiredGetWithHttpInfo(expiryDate);
        return resp.getData();
    }

    /**
     * Get delegation expired users
     * Sample request:                    Get /user-profile/delegate-user/expired
     * @param expiryDate  (optional)
     * @return ApiResponse&lt;List&lt;DelegationUserDto&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<DelegationUserDto>> userProfileDelegateUserExpiredGetWithHttpInfo(OffsetDateTime expiryDate) throws ApiException {
        com.squareup.okhttp.Call call = userProfileDelegateUserExpiredGetValidateBeforeCall(expiryDate, null, null);
        Type localVarReturnType = new TypeToken<List<DelegationUserDto>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get delegation expired users (asynchronously)
     * Sample request:                    Get /user-profile/delegate-user/expired
     * @param expiryDate  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call userProfileDelegateUserExpiredGetAsync(OffsetDateTime expiryDate, final ApiCallback<List<DelegationUserDto>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = userProfileDelegateUserExpiredGetValidateBeforeCall(expiryDate, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<DelegationUserDto>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for userProfileDelegateUserLinkExpiredGet
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call userProfileDelegateUserLinkExpiredGetCall(final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/user-profile/delegate-user/link-expired";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call userProfileDelegateUserLinkExpiredGetValidateBeforeCall(final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = userProfileDelegateUserLinkExpiredGetCall(progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get delegation link expired users
     * Sample request:                    Get /user-profile/delegate-user/link-expired
     * @return List&lt;DelegationUserDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<DelegationUserDto> userProfileDelegateUserLinkExpiredGet() throws ApiException {
        ApiResponse<List<DelegationUserDto>> resp = userProfileDelegateUserLinkExpiredGetWithHttpInfo();
        return resp.getData();
    }

    /**
     * Get delegation link expired users
     * Sample request:                    Get /user-profile/delegate-user/link-expired
     * @return ApiResponse&lt;List&lt;DelegationUserDto&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<DelegationUserDto>> userProfileDelegateUserLinkExpiredGetWithHttpInfo() throws ApiException {
        com.squareup.okhttp.Call call = userProfileDelegateUserLinkExpiredGetValidateBeforeCall(null, null);
        Type localVarReturnType = new TypeToken<List<DelegationUserDto>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get delegation link expired users (asynchronously)
     * Sample request:                    Get /user-profile/delegate-user/link-expired
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call userProfileDelegateUserLinkExpiredGetAsync(final ApiCallback<List<DelegationUserDto>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = userProfileDelegateUserLinkExpiredGetValidateBeforeCall(progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<DelegationUserDto>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for userProfileDelegateUserNotificationLogPost
     * @param body  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call userProfileDelegateUserNotificationLogPostCall(DelegationEmailNotificationLogInfo body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/user-profile/delegate-user/notification-log";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/_*+json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call userProfileDelegateUserNotificationLogPostValidateBeforeCall(DelegationEmailNotificationLogInfo body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = userProfileDelegateUserNotificationLogPostCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Create user delegation email notification log
     * Sample requests:                    POST /user-profile/delegate-user/notification-logs
     * @param body  (optional)
     * @return Integer
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Integer userProfileDelegateUserNotificationLogPost(DelegationEmailNotificationLogInfo body) throws ApiException {
        ApiResponse<Integer> resp = userProfileDelegateUserNotificationLogPostWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Create user delegation email notification log
     * Sample requests:                    POST /user-profile/delegate-user/notification-logs
     * @param body  (optional)
     * @return ApiResponse&lt;Integer&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Integer> userProfileDelegateUserNotificationLogPostWithHttpInfo(DelegationEmailNotificationLogInfo body) throws ApiException {
        com.squareup.okhttp.Call call = userProfileDelegateUserNotificationLogPostValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<Integer>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Create user delegation email notification log (asynchronously)
     * Sample requests:                    POST /user-profile/delegate-user/notification-logs
     * @param body  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call userProfileDelegateUserNotificationLogPostAsync(DelegationEmailNotificationLogInfo body, final ApiCallback<Integer> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = userProfileDelegateUserNotificationLogPostValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Integer>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for userProfileDelegateUserPost
     * @param body  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call userProfileDelegateUserPostCall(DelegatedUserProfileRequestInfo body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/user-profile/delegate-user";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/_*+json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call userProfileDelegateUserPostValidateBeforeCall(DelegatedUserProfileRequestInfo body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = userProfileDelegateUserPostCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Allows admin to delegate other org user to represent org
     * Sample request:                    POST /user-profile/delegate-user      {        \&quot;userName\&quot;: \&quot;user@mail.com\&quot;,        \&quot;detail\&quot;: {          \&quot;delegatedOrgId\&quot;: \&quot;organisation id\&quot;,          \&quot;roleIds\&quot;: [            role ids          ],          \&quot;startDate\&quot;: \&quot;date\&quot;,          \&quot;endDate\&quot;: \&quot;date\&quot;        }      }
     * @param body  (optional)
     * @return Boolean
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Boolean userProfileDelegateUserPost(DelegatedUserProfileRequestInfo body) throws ApiException {
        ApiResponse<Boolean> resp = userProfileDelegateUserPostWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Allows admin to delegate other org user to represent org
     * Sample request:                    POST /user-profile/delegate-user      {        \&quot;userName\&quot;: \&quot;user@mail.com\&quot;,        \&quot;detail\&quot;: {          \&quot;delegatedOrgId\&quot;: \&quot;organisation id\&quot;,          \&quot;roleIds\&quot;: [            role ids          ],          \&quot;startDate\&quot;: \&quot;date\&quot;,          \&quot;endDate\&quot;: \&quot;date\&quot;        }      }
     * @param body  (optional)
     * @return ApiResponse&lt;Boolean&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Boolean> userProfileDelegateUserPostWithHttpInfo(DelegatedUserProfileRequestInfo body) throws ApiException {
        com.squareup.okhttp.Call call = userProfileDelegateUserPostValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<Boolean>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Allows admin to delegate other org user to represent org (asynchronously)
     * Sample request:                    POST /user-profile/delegate-user      {        \&quot;userName\&quot;: \&quot;user@mail.com\&quot;,        \&quot;detail\&quot;: {          \&quot;delegatedOrgId\&quot;: \&quot;organisation id\&quot;,          \&quot;roleIds\&quot;: [            role ids          ],          \&quot;startDate\&quot;: \&quot;date\&quot;,          \&quot;endDate\&quot;: \&quot;date\&quot;        }      }
     * @param body  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call userProfileDelegateUserPostAsync(DelegatedUserProfileRequestInfo body, final ApiCallback<Boolean> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = userProfileDelegateUserPostValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Boolean>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for userProfileDelegateUserPut
     * @param body  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call userProfileDelegateUserPutCall(DelegatedUserProfileRequestInfo body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/user-profile/delegate-user";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/_*+json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call userProfileDelegateUserPutValidateBeforeCall(DelegatedUserProfileRequestInfo body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = userProfileDelegateUserPutCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Allows admin to update user delegation details
     * Sample request:                    PUT /user-profile/delegate-user      {        \&quot;userName\&quot;: \&quot;user@mail.com\&quot;,        \&quot;detail\&quot;: {          \&quot;delegatedOrgId\&quot;: \&quot;organisation id\&quot;,          \&quot;roleIds\&quot;: [            roles          ],          \&quot;startDate\&quot;: \&quot;date\&quot;,          \&quot;endDate\&quot;: \&quot;date\&quot;        }      }
     * @param body  (optional)
     * @return Boolean
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Boolean userProfileDelegateUserPut(DelegatedUserProfileRequestInfo body) throws ApiException {
        ApiResponse<Boolean> resp = userProfileDelegateUserPutWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Allows admin to update user delegation details
     * Sample request:                    PUT /user-profile/delegate-user      {        \&quot;userName\&quot;: \&quot;user@mail.com\&quot;,        \&quot;detail\&quot;: {          \&quot;delegatedOrgId\&quot;: \&quot;organisation id\&quot;,          \&quot;roleIds\&quot;: [            roles          ],          \&quot;startDate\&quot;: \&quot;date\&quot;,          \&quot;endDate\&quot;: \&quot;date\&quot;        }      }
     * @param body  (optional)
     * @return ApiResponse&lt;Boolean&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Boolean> userProfileDelegateUserPutWithHttpInfo(DelegatedUserProfileRequestInfo body) throws ApiException {
        com.squareup.okhttp.Call call = userProfileDelegateUserPutValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<Boolean>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Allows admin to update user delegation details (asynchronously)
     * Sample request:                    PUT /user-profile/delegate-user      {        \&quot;userName\&quot;: \&quot;user@mail.com\&quot;,        \&quot;detail\&quot;: {          \&quot;delegatedOrgId\&quot;: \&quot;organisation id\&quot;,          \&quot;roleIds\&quot;: [            roles          ],          \&quot;startDate\&quot;: \&quot;date\&quot;,          \&quot;endDate\&quot;: \&quot;date\&quot;        }      }
     * @param body  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call userProfileDelegateUserPutAsync(DelegatedUserProfileRequestInfo body, final ApiCallback<Boolean> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = userProfileDelegateUserPutValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Boolean>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for userProfileDelegateUserResendActivationPut
     * @param userId  (optional)
     * @param delegatedOrganisationId  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call userProfileDelegateUserResendActivationPutCall(String userId, String delegatedOrganisationId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/user-profile/delegate-user/resend-activation";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (userId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("user-id", userId));
        if (delegatedOrganisationId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("delegated-organisation-id", delegatedOrganisationId));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call userProfileDelegateUserResendActivationPutValidateBeforeCall(String userId, String delegatedOrganisationId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = userProfileDelegateUserResendActivationPutCall(userId, delegatedOrganisationId, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Resend delegation activation link
     * Sample request:                    PUT /user-profile/delegate-user/resend-activation?user-id&#x3D;user@mail.com,organisation-id&#x3D;&#x27;organisation id&#x27;
     * @param userId  (optional)
     * @param delegatedOrganisationId  (optional)
     * @return Boolean
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Boolean userProfileDelegateUserResendActivationPut(String userId, String delegatedOrganisationId) throws ApiException {
        ApiResponse<Boolean> resp = userProfileDelegateUserResendActivationPutWithHttpInfo(userId, delegatedOrganisationId);
        return resp.getData();
    }

    /**
     * Resend delegation activation link
     * Sample request:                    PUT /user-profile/delegate-user/resend-activation?user-id&#x3D;user@mail.com,organisation-id&#x3D;&#x27;organisation id&#x27;
     * @param userId  (optional)
     * @param delegatedOrganisationId  (optional)
     * @return ApiResponse&lt;Boolean&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Boolean> userProfileDelegateUserResendActivationPutWithHttpInfo(String userId, String delegatedOrganisationId) throws ApiException {
        com.squareup.okhttp.Call call = userProfileDelegateUserResendActivationPutValidateBeforeCall(userId, delegatedOrganisationId, null, null);
        Type localVarReturnType = new TypeToken<Boolean>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Resend delegation activation link (asynchronously)
     * Sample request:                    PUT /user-profile/delegate-user/resend-activation?user-id&#x3D;user@mail.com,organisation-id&#x3D;&#x27;organisation id&#x27;
     * @param userId  (optional)
     * @param delegatedOrganisationId  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call userProfileDelegateUserResendActivationPutAsync(String userId, String delegatedOrganisationId, final ApiCallback<Boolean> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = userProfileDelegateUserResendActivationPutValidateBeforeCall(userId, delegatedOrganisationId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Boolean>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for userProfileDelegateUserTerminateDelete
     * @param userId  (optional)
     * @param delegatedOrganisationId  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call userProfileDelegateUserTerminateDeleteCall(String userId, String delegatedOrganisationId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/user-profile/delegate-user/terminate";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (userId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("user-id", userId));
        if (delegatedOrganisationId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("delegated-organisation-id", delegatedOrganisationId));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call userProfileDelegateUserTerminateDeleteValidateBeforeCall(String userId, String delegatedOrganisationId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = userProfileDelegateUserTerminateDeleteCall(userId, delegatedOrganisationId, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Delete Delegation Terminated Users
     * Sample request:                    DELETE /user-profile/delegate-user/terminate?user-id&#x3D;1,delegated-organisation-id&#x3D;1
     * @param userId  (optional)
     * @param delegatedOrganisationId  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void userProfileDelegateUserTerminateDelete(String userId, String delegatedOrganisationId) throws ApiException {
        userProfileDelegateUserTerminateDeleteWithHttpInfo(userId, delegatedOrganisationId);
    }

    /**
     * Delete Delegation Terminated Users
     * Sample request:                    DELETE /user-profile/delegate-user/terminate?user-id&#x3D;1,delegated-organisation-id&#x3D;1
     * @param userId  (optional)
     * @param delegatedOrganisationId  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> userProfileDelegateUserTerminateDeleteWithHttpInfo(String userId, String delegatedOrganisationId) throws ApiException {
        com.squareup.okhttp.Call call = userProfileDelegateUserTerminateDeleteValidateBeforeCall(userId, delegatedOrganisationId, null, null);
        return apiClient.execute(call);
    }

    /**
     * Delete Delegation Terminated Users (asynchronously)
     * Sample request:                    DELETE /user-profile/delegate-user/terminate?user-id&#x3D;1,delegated-organisation-id&#x3D;1
     * @param userId  (optional)
     * @param delegatedOrganisationId  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call userProfileDelegateUserTerminateDeleteAsync(String userId, String delegatedOrganisationId, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = userProfileDelegateUserTerminateDeleteValidateBeforeCall(userId, delegatedOrganisationId, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for userProfileDelegateUserValidationGet
     * @param acceptanceCode  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call userProfileDelegateUserValidationGetCall(String acceptanceCode, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/user-profile/delegate-user/validation";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (acceptanceCode != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("acceptance-code", acceptanceCode));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call userProfileDelegateUserValidationGetValidateBeforeCall(String acceptanceCode, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = userProfileDelegateUserValidationGetCall(acceptanceCode, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Validate user acceptation for delegation invitation
     * Sample request:                    GET /user-profile/delegate-user/validation?acceptance-code&#x3D;&#x27;code&#x27;
     * @param acceptanceCode  (optional)
     * @return Boolean
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Boolean userProfileDelegateUserValidationGet(String acceptanceCode) throws ApiException {
        ApiResponse<Boolean> resp = userProfileDelegateUserValidationGetWithHttpInfo(acceptanceCode);
        return resp.getData();
    }

    /**
     * Validate user acceptation for delegation invitation
     * Sample request:                    GET /user-profile/delegate-user/validation?acceptance-code&#x3D;&#x27;code&#x27;
     * @param acceptanceCode  (optional)
     * @return ApiResponse&lt;Boolean&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Boolean> userProfileDelegateUserValidationGetWithHttpInfo(String acceptanceCode) throws ApiException {
        com.squareup.okhttp.Call call = userProfileDelegateUserValidationGetValidateBeforeCall(acceptanceCode, null, null);
        Type localVarReturnType = new TypeToken<Boolean>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Validate user acceptation for delegation invitation (asynchronously)
     * Sample request:                    GET /user-profile/delegate-user/validation?acceptance-code&#x3D;&#x27;code&#x27;
     * @param acceptanceCode  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call userProfileDelegateUserValidationGetAsync(String acceptanceCode, final ApiCallback<Boolean> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = userProfileDelegateUserValidationGetValidateBeforeCall(acceptanceCode, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Boolean>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for userProfileV1DelegateUserAuditEventsGet
     * @param userId  (optional)
     * @param delegatedOrganisationId  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call userProfileV1DelegateUserAuditEventsGetCall(Integer userId, String delegatedOrganisationId, Integer pageSize, Integer currentPage, Boolean isPagination, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/user-profile/v1/delegate-user/audit-events";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (userId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("user-id", userId));
        if (delegatedOrganisationId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("delegated-organisation-id", delegatedOrganisationId));
        if (pageSize != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("PageSize", pageSize));
        if (currentPage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("CurrentPage", currentPage));
        if (isPagination != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("IsPagination", isPagination));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call userProfileV1DelegateUserAuditEventsGetValidateBeforeCall(Integer userId, String delegatedOrganisationId, Integer pageSize, Integer currentPage, Boolean isPagination, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = userProfileV1DelegateUserAuditEventsGetCall(userId, delegatedOrganisationId, pageSize, currentPage, isPagination, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Returns user&#x27;s delegation audit events
     * Sample request:                    GET /user-profile/v1/delegate-user-auditevents?user-id&#x3D;user@test.com,delegated-organisation-id&#x3D;&#x27;organisation id&#x27;,PageSize&#x3D;1,CurrentPage&#x3D;1
     * @param userId  (optional)
     * @param delegatedOrganisationId  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @return DelegationAuditEventoServiceRoleGroupInfListResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public DelegationAuditEventoServiceRoleGroupInfListResponse userProfileV1DelegateUserAuditEventsGet(Integer userId, String delegatedOrganisationId, Integer pageSize, Integer currentPage, Boolean isPagination) throws ApiException {
        ApiResponse<DelegationAuditEventoServiceRoleGroupInfListResponse> resp = userProfileV1DelegateUserAuditEventsGetWithHttpInfo(userId, delegatedOrganisationId, pageSize, currentPage, isPagination);
        return resp.getData();
    }

    /**
     * Returns user&#x27;s delegation audit events
     * Sample request:                    GET /user-profile/v1/delegate-user-auditevents?user-id&#x3D;user@test.com,delegated-organisation-id&#x3D;&#x27;organisation id&#x27;,PageSize&#x3D;1,CurrentPage&#x3D;1
     * @param userId  (optional)
     * @param delegatedOrganisationId  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @return ApiResponse&lt;DelegationAuditEventoServiceRoleGroupInfListResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<DelegationAuditEventoServiceRoleGroupInfListResponse> userProfileV1DelegateUserAuditEventsGetWithHttpInfo(Integer userId, String delegatedOrganisationId, Integer pageSize, Integer currentPage, Boolean isPagination) throws ApiException {
        com.squareup.okhttp.Call call = userProfileV1DelegateUserAuditEventsGetValidateBeforeCall(userId, delegatedOrganisationId, pageSize, currentPage, isPagination, null, null);
        Type localVarReturnType = new TypeToken<DelegationAuditEventoServiceRoleGroupInfListResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Returns user&#x27;s delegation audit events (asynchronously)
     * Sample request:                    GET /user-profile/v1/delegate-user-auditevents?user-id&#x3D;user@test.com,delegated-organisation-id&#x3D;&#x27;organisation id&#x27;,PageSize&#x3D;1,CurrentPage&#x3D;1
     * @param userId  (optional)
     * @param delegatedOrganisationId  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call userProfileV1DelegateUserAuditEventsGetAsync(Integer userId, String delegatedOrganisationId, Integer pageSize, Integer currentPage, Boolean isPagination, final ApiCallback<DelegationAuditEventoServiceRoleGroupInfListResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = userProfileV1DelegateUserAuditEventsGetValidateBeforeCall(userId, delegatedOrganisationId, pageSize, currentPage, isPagination, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<DelegationAuditEventoServiceRoleGroupInfListResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for userProfileV1DelegateUserPost
     * @param body  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call userProfileV1DelegateUserPostCall(DelegatedUserProfileServiceRoleGroupRequestInfo body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/user-profile/v1/delegate-user";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/_*+json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call userProfileV1DelegateUserPostValidateBeforeCall(DelegatedUserProfileServiceRoleGroupRequestInfo body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = userProfileV1DelegateUserPostCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Allows admin to delegate other org user to represent org
     * Sample request:                    POST /user-profile/v1/delegate-user      {        \&quot;userName\&quot;: \&quot;\&quot;,        \&quot;detail\&quot;: {          \&quot;delegatedOrgId\&quot;: \&quot;\&quot;,          \&quot;serviceRoleGroupIds\&quot;: [            0          ],          \&quot;startDate\&quot;: \&quot;\&quot;,          \&quot;endDate\&quot;: \&quot;\&quot;        }      }
     * @param body  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void userProfileV1DelegateUserPost(DelegatedUserProfileServiceRoleGroupRequestInfo body) throws ApiException {
        userProfileV1DelegateUserPostWithHttpInfo(body);
    }

    /**
     * Allows admin to delegate other org user to represent org
     * Sample request:                    POST /user-profile/v1/delegate-user      {        \&quot;userName\&quot;: \&quot;\&quot;,        \&quot;detail\&quot;: {          \&quot;delegatedOrgId\&quot;: \&quot;\&quot;,          \&quot;serviceRoleGroupIds\&quot;: [            0          ],          \&quot;startDate\&quot;: \&quot;\&quot;,          \&quot;endDate\&quot;: \&quot;\&quot;        }      }
     * @param body  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> userProfileV1DelegateUserPostWithHttpInfo(DelegatedUserProfileServiceRoleGroupRequestInfo body) throws ApiException {
        com.squareup.okhttp.Call call = userProfileV1DelegateUserPostValidateBeforeCall(body, null, null);
        return apiClient.execute(call);
    }

    /**
     * Allows admin to delegate other org user to represent org (asynchronously)
     * Sample request:                    POST /user-profile/v1/delegate-user      {        \&quot;userName\&quot;: \&quot;\&quot;,        \&quot;detail\&quot;: {          \&quot;delegatedOrgId\&quot;: \&quot;\&quot;,          \&quot;serviceRoleGroupIds\&quot;: [            0          ],          \&quot;startDate\&quot;: \&quot;\&quot;,          \&quot;endDate\&quot;: \&quot;\&quot;        }      }
     * @param body  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call userProfileV1DelegateUserPostAsync(DelegatedUserProfileServiceRoleGroupRequestInfo body, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = userProfileV1DelegateUserPostValidateBeforeCall(body, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for userProfileV1DelegateUserPut
     * @param body  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call userProfileV1DelegateUserPutCall(DelegatedUserProfileServiceRoleGroupRequestInfo body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/user-profile/v1/delegate-user";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/_*+json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call userProfileV1DelegateUserPutValidateBeforeCall(DelegatedUserProfileServiceRoleGroupRequestInfo body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = userProfileV1DelegateUserPutCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Allows admin to update user delegation details
     * Sample request:                    PUT /user-profile/v1/delegate-user      {        \&quot;userName\&quot;: \&quot;\&quot;,        \&quot;detail\&quot;: {          \&quot;delegatedOrgId\&quot;: \&quot;\&quot;,          \&quot;serviceRoleGroupIds\&quot;: [            0          ],          \&quot;startDate\&quot;: \&quot;\&quot;,          \&quot;endDate\&quot;: \&quot;\&quot;        }      }
     * @param body  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void userProfileV1DelegateUserPut(DelegatedUserProfileServiceRoleGroupRequestInfo body) throws ApiException {
        userProfileV1DelegateUserPutWithHttpInfo(body);
    }

    /**
     * Allows admin to update user delegation details
     * Sample request:                    PUT /user-profile/v1/delegate-user      {        \&quot;userName\&quot;: \&quot;\&quot;,        \&quot;detail\&quot;: {          \&quot;delegatedOrgId\&quot;: \&quot;\&quot;,          \&quot;serviceRoleGroupIds\&quot;: [            0          ],          \&quot;startDate\&quot;: \&quot;\&quot;,          \&quot;endDate\&quot;: \&quot;\&quot;        }      }
     * @param body  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> userProfileV1DelegateUserPutWithHttpInfo(DelegatedUserProfileServiceRoleGroupRequestInfo body) throws ApiException {
        com.squareup.okhttp.Call call = userProfileV1DelegateUserPutValidateBeforeCall(body, null, null);
        return apiClient.execute(call);
    }

    /**
     * Allows admin to update user delegation details (asynchronously)
     * Sample request:                    PUT /user-profile/v1/delegate-user      {        \&quot;userName\&quot;: \&quot;\&quot;,        \&quot;detail\&quot;: {          \&quot;delegatedOrgId\&quot;: \&quot;\&quot;,          \&quot;serviceRoleGroupIds\&quot;: [            0          ],          \&quot;startDate\&quot;: \&quot;\&quot;,          \&quot;endDate\&quot;: \&quot;\&quot;        }      }
     * @param body  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call userProfileV1DelegateUserPutAsync(DelegatedUserProfileServiceRoleGroupRequestInfo body, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = userProfileV1DelegateUserPutValidateBeforeCall(body, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
}
