/*
 * CcsSso.OrganisationApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uk.gov.ccs.swagger.sso.api;

import uk.gov.ccs.swagger.sso.ApiCallback;
import uk.gov.ccs.swagger.sso.ApiClient;
import uk.gov.ccs.swagger.sso.ApiException;
import uk.gov.ccs.swagger.sso.ApiResponse;
import uk.gov.ccs.swagger.sso.Configuration;
import uk.gov.ccs.swagger.sso.Pair;
import uk.gov.ccs.swagger.sso.ProgressRequestBody;
import uk.gov.ccs.swagger.sso.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import uk.gov.ccs.swagger.sso.model.OrgAuditEventInfoServiceRoleGroupListResponse;
import uk.gov.ccs.swagger.sso.model.OrganisationAuditEventInfo;
import uk.gov.ccs.swagger.sso.model.OrganisationAuditEventInfoListResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OrganisationAuditEventApi {
    private ApiClient apiClient;

    public OrganisationAuditEventApi() {
        this(Configuration.getDefaultApiClient());
    }

    public OrganisationAuditEventApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for organisationProfileAuditEventsPost
     * @param body  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileAuditEventsPostCall(List<OrganisationAuditEventInfo> body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/audit-events";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/_*+json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileAuditEventsPostValidateBeforeCall(List<OrganisationAuditEventInfo> body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = organisationProfileAuditEventsPostCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Create organisation audit event log
     * Sample request:                    POST /organisation-profile/audit-events      {        status &#x3D; 0,         OrganisationId &#x3D; \&quot;\&quot;,        SchemeIdentifier &#x3D; \&quot;\&quot;,        Actioned &#x3D; \&quot;\&quot;,        ActionedBy &#x3D; \&quot;\&quot;      }
     * @param body  (optional)
     * @return Boolean
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Boolean organisationProfileAuditEventsPost(List<OrganisationAuditEventInfo> body) throws ApiException {
        ApiResponse<Boolean> resp = organisationProfileAuditEventsPostWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Create organisation audit event log
     * Sample request:                    POST /organisation-profile/audit-events      {        status &#x3D; 0,         OrganisationId &#x3D; \&quot;\&quot;,        SchemeIdentifier &#x3D; \&quot;\&quot;,        Actioned &#x3D; \&quot;\&quot;,        ActionedBy &#x3D; \&quot;\&quot;      }
     * @param body  (optional)
     * @return ApiResponse&lt;Boolean&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Boolean> organisationProfileAuditEventsPostWithHttpInfo(List<OrganisationAuditEventInfo> body) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileAuditEventsPostValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<Boolean>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Create organisation audit event log (asynchronously)
     * Sample request:                    POST /organisation-profile/audit-events      {        status &#x3D; 0,         OrganisationId &#x3D; \&quot;\&quot;,        SchemeIdentifier &#x3D; \&quot;\&quot;,        Actioned &#x3D; \&quot;\&quot;,        ActionedBy &#x3D; \&quot;\&quot;      }
     * @param body  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileAuditEventsPostAsync(List<OrganisationAuditEventInfo> body, final ApiCallback<Boolean> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileAuditEventsPostValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Boolean>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for organisationProfileOrganisationIdAuditEventsGet
     * @param organisationId  (required)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdAuditEventsGetCall(String organisationId, Integer pageSize, Integer currentPage, Boolean isPagination, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/{organisationId}/audit-events"
            .replaceAll("\\{" + "organisationId" + "\\}", apiClient.escapeString(organisationId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (pageSize != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("PageSize", pageSize));
        if (currentPage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("CurrentPage", currentPage));
        if (isPagination != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("IsPagination", isPagination));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileOrganisationIdAuditEventsGetValidateBeforeCall(String organisationId, Integer pageSize, Integer currentPage, Boolean isPagination, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'organisationId' is set
        if (organisationId == null) {
            throw new ApiException("Missing the required parameter 'organisationId' when calling organisationProfileOrganisationIdAuditEventsGet(Async)");
        }
        
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdAuditEventsGetCall(organisationId, pageSize, currentPage, isPagination, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * To get organisation audit event log
     * Sample request:                    GET organisation-profile/1/audit-events?page-size&#x3D;10,current-page&#x3D;1
     * @param organisationId  (required)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @return OrganisationAuditEventInfoListResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OrganisationAuditEventInfoListResponse organisationProfileOrganisationIdAuditEventsGet(String organisationId, Integer pageSize, Integer currentPage, Boolean isPagination) throws ApiException {
        ApiResponse<OrganisationAuditEventInfoListResponse> resp = organisationProfileOrganisationIdAuditEventsGetWithHttpInfo(organisationId, pageSize, currentPage, isPagination);
        return resp.getData();
    }

    /**
     * To get organisation audit event log
     * Sample request:                    GET organisation-profile/1/audit-events?page-size&#x3D;10,current-page&#x3D;1
     * @param organisationId  (required)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @return ApiResponse&lt;OrganisationAuditEventInfoListResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OrganisationAuditEventInfoListResponse> organisationProfileOrganisationIdAuditEventsGetWithHttpInfo(String organisationId, Integer pageSize, Integer currentPage, Boolean isPagination) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdAuditEventsGetValidateBeforeCall(organisationId, pageSize, currentPage, isPagination, null, null);
        Type localVarReturnType = new TypeToken<OrganisationAuditEventInfoListResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * To get organisation audit event log (asynchronously)
     * Sample request:                    GET organisation-profile/1/audit-events?page-size&#x3D;10,current-page&#x3D;1
     * @param organisationId  (required)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdAuditEventsGetAsync(String organisationId, Integer pageSize, Integer currentPage, Boolean isPagination, final ApiCallback<OrganisationAuditEventInfoListResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileOrganisationIdAuditEventsGetValidateBeforeCall(organisationId, pageSize, currentPage, isPagination, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OrganisationAuditEventInfoListResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for organisationProfileOrganisationIdAuditEventsServiceRoleGroupsGet
     * @param organisationId  (required)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdAuditEventsServiceRoleGroupsGetCall(String organisationId, Integer pageSize, Integer currentPage, Boolean isPagination, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/{organisationId}/audit-events/service-role-groups"
            .replaceAll("\\{" + "organisationId" + "\\}", apiClient.escapeString(organisationId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (pageSize != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("PageSize", pageSize));
        if (currentPage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("CurrentPage", currentPage));
        if (isPagination != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("IsPagination", isPagination));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileOrganisationIdAuditEventsServiceRoleGroupsGetValidateBeforeCall(String organisationId, Integer pageSize, Integer currentPage, Boolean isPagination, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'organisationId' is set
        if (organisationId == null) {
            throw new ApiException("Missing the required parameter 'organisationId' when calling organisationProfileOrganisationIdAuditEventsServiceRoleGroupsGet(Async)");
        }
        
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdAuditEventsServiceRoleGroupsGetCall(organisationId, pageSize, currentPage, isPagination, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * To get organisation audit event log
     * Sample request:                    GET organisation-profile/1/audit-events/service-role-groups?page-size&#x3D;10,current-page&#x3D;1
     * @param organisationId  (required)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @return OrgAuditEventInfoServiceRoleGroupListResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OrgAuditEventInfoServiceRoleGroupListResponse organisationProfileOrganisationIdAuditEventsServiceRoleGroupsGet(String organisationId, Integer pageSize, Integer currentPage, Boolean isPagination) throws ApiException {
        ApiResponse<OrgAuditEventInfoServiceRoleGroupListResponse> resp = organisationProfileOrganisationIdAuditEventsServiceRoleGroupsGetWithHttpInfo(organisationId, pageSize, currentPage, isPagination);
        return resp.getData();
    }

    /**
     * To get organisation audit event log
     * Sample request:                    GET organisation-profile/1/audit-events/service-role-groups?page-size&#x3D;10,current-page&#x3D;1
     * @param organisationId  (required)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @return ApiResponse&lt;OrgAuditEventInfoServiceRoleGroupListResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OrgAuditEventInfoServiceRoleGroupListResponse> organisationProfileOrganisationIdAuditEventsServiceRoleGroupsGetWithHttpInfo(String organisationId, Integer pageSize, Integer currentPage, Boolean isPagination) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdAuditEventsServiceRoleGroupsGetValidateBeforeCall(organisationId, pageSize, currentPage, isPagination, null, null);
        Type localVarReturnType = new TypeToken<OrgAuditEventInfoServiceRoleGroupListResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * To get organisation audit event log (asynchronously)
     * Sample request:                    GET organisation-profile/1/audit-events/service-role-groups?page-size&#x3D;10,current-page&#x3D;1
     * @param organisationId  (required)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdAuditEventsServiceRoleGroupsGetAsync(String organisationId, Integer pageSize, Integer currentPage, Boolean isPagination, final ApiCallback<OrgAuditEventInfoServiceRoleGroupListResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileOrganisationIdAuditEventsServiceRoleGroupsGetValidateBeforeCall(organisationId, pageSize, currentPage, isPagination, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OrgAuditEventInfoServiceRoleGroupListResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
