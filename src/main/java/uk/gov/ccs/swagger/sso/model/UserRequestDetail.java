/*
 * CcsSso.WrapperApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uk.gov.ccs.swagger.sso.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * UserRequestDetail
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-12-07T09:38:21.309374Z[Europe/London]")
public class UserRequestDetail {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("groupIds")
  private List<Integer> groupIds = null;

  @SerializedName("roleIds")
  private List<Integer> roleIds = null;

  @SerializedName("identityProviderIds")
  private List<Integer> identityProviderIds = null;

  public UserRequestDetail id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public UserRequestDetail groupIds(List<Integer> groupIds) {
    this.groupIds = groupIds;
    return this;
  }

  public UserRequestDetail addGroupIdsItem(Integer groupIdsItem) {
    if (this.groupIds == null) {
      this.groupIds = new ArrayList<Integer>();
    }
    this.groupIds.add(groupIdsItem);
    return this;
  }

   /**
   * Get groupIds
   * @return groupIds
  **/
  @Schema(description = "")
  public List<Integer> getGroupIds() {
    return groupIds;
  }

  public void setGroupIds(List<Integer> groupIds) {
    this.groupIds = groupIds;
  }

  public UserRequestDetail roleIds(List<Integer> roleIds) {
    this.roleIds = roleIds;
    return this;
  }

  public UserRequestDetail addRoleIdsItem(Integer roleIdsItem) {
    if (this.roleIds == null) {
      this.roleIds = new ArrayList<Integer>();
    }
    this.roleIds.add(roleIdsItem);
    return this;
  }

   /**
   * Get roleIds
   * @return roleIds
  **/
  @Schema(description = "")
  public List<Integer> getRoleIds() {
    return roleIds;
  }

  public void setRoleIds(List<Integer> roleIds) {
    this.roleIds = roleIds;
  }

  public UserRequestDetail identityProviderIds(List<Integer> identityProviderIds) {
    this.identityProviderIds = identityProviderIds;
    return this;
  }

  public UserRequestDetail addIdentityProviderIdsItem(Integer identityProviderIdsItem) {
    if (this.identityProviderIds == null) {
      this.identityProviderIds = new ArrayList<Integer>();
    }
    this.identityProviderIds.add(identityProviderIdsItem);
    return this;
  }

   /**
   * Get identityProviderIds
   * @return identityProviderIds
  **/
  @Schema(description = "")
  public List<Integer> getIdentityProviderIds() {
    return identityProviderIds;
  }

  public void setIdentityProviderIds(List<Integer> identityProviderIds) {
    this.identityProviderIds = identityProviderIds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserRequestDetail userRequestDetail = (UserRequestDetail) o;
    return Objects.equals(this.id, userRequestDetail.id) &&
        Objects.equals(this.groupIds, userRequestDetail.groupIds) &&
        Objects.equals(this.roleIds, userRequestDetail.roleIds) &&
        Objects.equals(this.identityProviderIds, userRequestDetail.identityProviderIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, groupIds, roleIds, identityProviderIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserRequestDetail {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    groupIds: ").append(toIndentedString(groupIds)).append("\n");
    sb.append("    roleIds: ").append(toIndentedString(roleIds)).append("\n");
    sb.append("    identityProviderIds: ").append(toIndentedString(identityProviderIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
