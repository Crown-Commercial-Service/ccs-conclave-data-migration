/*
 * CcsSso.OrganisationApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uk.gov.ccs.swagger.sso.api;

import uk.gov.ccs.swagger.sso.ApiCallback;
import uk.gov.ccs.swagger.sso.ApiClient;
import uk.gov.ccs.swagger.sso.ApiException;
import uk.gov.ccs.swagger.sso.ApiResponse;
import uk.gov.ccs.swagger.sso.Configuration;
import uk.gov.ccs.swagger.sso.Pair;
import uk.gov.ccs.swagger.sso.ProgressRequestBody;
import uk.gov.ccs.swagger.sso.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import uk.gov.ccs.swagger.sso.model.ManualValidateOrganisationStatus;
import uk.gov.ccs.swagger.sso.model.OrganisationAuditInfo;
import uk.gov.ccs.swagger.sso.model.OrganisationAuditInfoListResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OrganisationAuditApi {
    private ApiClient apiClient;

    public OrganisationAuditApi() {
        this(Configuration.getDefaultApiClient());
    }

    public OrganisationAuditApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for organisationProfileAuditsGet
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param searchString  (optional)
     * @param pendingOnly  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileAuditsGetCall(Integer pageSize, Integer currentPage, Boolean isPagination, String searchString, Boolean pendingOnly, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/audits";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (pageSize != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("PageSize", pageSize));
        if (currentPage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("CurrentPage", currentPage));
        if (isPagination != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("IsPagination", isPagination));
        if (searchString != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("search-string", searchString));
        if (pendingOnly != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("pending-only", pendingOnly));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileAuditsGetValidateBeforeCall(Integer pageSize, Integer currentPage, Boolean isPagination, String searchString, Boolean pendingOnly, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = organisationProfileAuditsGetCall(pageSize, currentPage, isPagination, searchString, pendingOnly, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Allows a user to retrieve organisation audits
     * Sample request:                    GET /organisation-profile/audits?page-size&#x3D;10,current-page&#x3D;1
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param searchString  (optional)
     * @param pendingOnly  (optional)
     * @return OrganisationAuditInfoListResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OrganisationAuditInfoListResponse organisationProfileAuditsGet(Integer pageSize, Integer currentPage, Boolean isPagination, String searchString, Boolean pendingOnly) throws ApiException {
        ApiResponse<OrganisationAuditInfoListResponse> resp = organisationProfileAuditsGetWithHttpInfo(pageSize, currentPage, isPagination, searchString, pendingOnly);
        return resp.getData();
    }

    /**
     * Allows a user to retrieve organisation audits
     * Sample request:                    GET /organisation-profile/audits?page-size&#x3D;10,current-page&#x3D;1
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param searchString  (optional)
     * @param pendingOnly  (optional)
     * @return ApiResponse&lt;OrganisationAuditInfoListResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OrganisationAuditInfoListResponse> organisationProfileAuditsGetWithHttpInfo(Integer pageSize, Integer currentPage, Boolean isPagination, String searchString, Boolean pendingOnly) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileAuditsGetValidateBeforeCall(pageSize, currentPage, isPagination, searchString, pendingOnly, null, null);
        Type localVarReturnType = new TypeToken<OrganisationAuditInfoListResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Allows a user to retrieve organisation audits (asynchronously)
     * Sample request:                    GET /organisation-profile/audits?page-size&#x3D;10,current-page&#x3D;1
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param searchString  (optional)
     * @param pendingOnly  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileAuditsGetAsync(Integer pageSize, Integer currentPage, Boolean isPagination, String searchString, Boolean pendingOnly, final ApiCallback<OrganisationAuditInfoListResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileAuditsGetValidateBeforeCall(pageSize, currentPage, isPagination, searchString, pendingOnly, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OrganisationAuditInfoListResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for organisationProfileAuditsPut
     * @param body  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileAuditsPutCall(OrganisationAuditInfo body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/audits";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/_*+json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileAuditsPutValidateBeforeCall(OrganisationAuditInfo body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = organisationProfileAuditsPutCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Update organisation audit logs
     * Sample request:                    PUT /organisation-profile/audits      {        status &#x3D; 0,         OrganisationId &#x3D; \&quot;\&quot;,        SchemeIdentifier &#x3D; \&quot;\&quot;,        Actioned &#x3D; \&quot;\&quot;,        ActionedBy &#x3D; \&quot;\&quot;      }
     * @param body  (optional)
     * @return OrganisationAuditInfoListResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OrganisationAuditInfoListResponse organisationProfileAuditsPut(OrganisationAuditInfo body) throws ApiException {
        ApiResponse<OrganisationAuditInfoListResponse> resp = organisationProfileAuditsPutWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Update organisation audit logs
     * Sample request:                    PUT /organisation-profile/audits      {        status &#x3D; 0,         OrganisationId &#x3D; \&quot;\&quot;,        SchemeIdentifier &#x3D; \&quot;\&quot;,        Actioned &#x3D; \&quot;\&quot;,        ActionedBy &#x3D; \&quot;\&quot;      }
     * @param body  (optional)
     * @return ApiResponse&lt;OrganisationAuditInfoListResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OrganisationAuditInfoListResponse> organisationProfileAuditsPutWithHttpInfo(OrganisationAuditInfo body) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileAuditsPutValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<OrganisationAuditInfoListResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Update organisation audit logs (asynchronously)
     * Sample request:                    PUT /organisation-profile/audits      {        status &#x3D; 0,         OrganisationId &#x3D; \&quot;\&quot;,        SchemeIdentifier &#x3D; \&quot;\&quot;,        Actioned &#x3D; \&quot;\&quot;,        ActionedBy &#x3D; \&quot;\&quot;      }
     * @param body  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileAuditsPutAsync(OrganisationAuditInfo body, final ApiCallback<OrganisationAuditInfoListResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileAuditsPutValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OrganisationAuditInfoListResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for organisationProfileOrganisationIdValidationManualPut
     * @param organisationId  (required)
     * @param status  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdValidationManualPutCall(String organisationId, ManualValidateOrganisationStatus status, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/{organisationId}/validation/manual"
            .replaceAll("\\{" + "organisationId" + "\\}", apiClient.escapeString(organisationId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (status != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("status", status));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileOrganisationIdValidationManualPutValidateBeforeCall(String organisationId, ManualValidateOrganisationStatus status, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'organisationId' is set
        if (organisationId == null) {
            throw new ApiException("Missing the required parameter 'organisationId' when calling organisationProfileOrganisationIdValidationManualPut(Async)");
        }
        
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdValidationManualPutCall(organisationId, status, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * To approve/decline/remove organisation buyer request
     * Sample request:                    PUT /organisation-profile/1/validation/manual?status&#x3D;0                    status --&gt; 0 &#x3D; Approve, 1 &#x3D; Decline, 2 &#x3D; Remove
     * @param organisationId  (required)
     * @param status  (optional)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public String organisationProfileOrganisationIdValidationManualPut(String organisationId, ManualValidateOrganisationStatus status) throws ApiException {
        ApiResponse<String> resp = organisationProfileOrganisationIdValidationManualPutWithHttpInfo(organisationId, status);
        return resp.getData();
    }

    /**
     * To approve/decline/remove organisation buyer request
     * Sample request:                    PUT /organisation-profile/1/validation/manual?status&#x3D;0                    status --&gt; 0 &#x3D; Approve, 1 &#x3D; Decline, 2 &#x3D; Remove
     * @param organisationId  (required)
     * @param status  (optional)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<String> organisationProfileOrganisationIdValidationManualPutWithHttpInfo(String organisationId, ManualValidateOrganisationStatus status) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdValidationManualPutValidateBeforeCall(organisationId, status, null, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * To approve/decline/remove organisation buyer request (asynchronously)
     * Sample request:                    PUT /organisation-profile/1/validation/manual?status&#x3D;0                    status --&gt; 0 &#x3D; Approve, 1 &#x3D; Decline, 2 &#x3D; Remove
     * @param organisationId  (required)
     * @param status  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdValidationManualPutAsync(String organisationId, ManualValidateOrganisationStatus status, final ApiCallback<String> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileOrganisationIdValidationManualPutValidateBeforeCall(organisationId, status, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
