/*
 * CcsSso.UserApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uk.gov.ccs.swagger.sso.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Int32StringTuple
 */


public class Int32StringTuple {
  @SerializedName("item1")
  private Integer item1 = null;

  @SerializedName("item2")
  private String item2 = null;

  public Int32StringTuple item1(Integer item1) {
    this.item1 = item1;
    return this;
  }

   /**
   * Get item1
   * @return item1
  **/
  @Schema(description = "")
  public Integer getItem1() {
    return item1;
  }

  public void setItem1(Integer item1) {
    this.item1 = item1;
  }

  public Int32StringTuple item2(String item2) {
    this.item2 = item2;
    return this;
  }

   /**
   * Get item2
   * @return item2
  **/
  @Schema(description = "")
  public String getItem2() {
    return item2;
  }

  public void setItem2(String item2) {
    this.item2 = item2;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Int32StringTuple int32StringTuple = (Int32StringTuple) o;
    return Objects.equals(this.item1, int32StringTuple.item1) &&
        Objects.equals(this.item2, int32StringTuple.item2);
  }

  @Override
  public int hashCode() {
    return Objects.hash(item1, item2);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Int32StringTuple {\n");
    
    sb.append("    item1: ").append(toIndentedString(item1)).append("\n");
    sb.append("    item2: ").append(toIndentedString(item2)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
