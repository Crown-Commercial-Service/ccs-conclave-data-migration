/*
 * CcsSso.ContactApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uk.gov.ccs.swagger.sso.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import uk.gov.ccs.swagger.sso.model.DeletedVirtualAddress;
/**
 * DeletedContatInfo
 */


public class DeletedContatInfo {
  @SerializedName("contactPointId")
  private Integer contactPointId = null;

  @SerializedName("contactDetailId")
  private Integer contactDetailId = null;

  @SerializedName("contactPointReasonName")
  private String contactPointReasonName = null;

  @SerializedName("virtualAddresses")
  private List<DeletedVirtualAddress> virtualAddresses = null;

  public DeletedContatInfo contactPointId(Integer contactPointId) {
    this.contactPointId = contactPointId;
    return this;
  }

   /**
   * Get contactPointId
   * @return contactPointId
  **/
  @Schema(description = "")
  public Integer getContactPointId() {
    return contactPointId;
  }

  public void setContactPointId(Integer contactPointId) {
    this.contactPointId = contactPointId;
  }

  public DeletedContatInfo contactDetailId(Integer contactDetailId) {
    this.contactDetailId = contactDetailId;
    return this;
  }

   /**
   * Get contactDetailId
   * @return contactDetailId
  **/
  @Schema(description = "")
  public Integer getContactDetailId() {
    return contactDetailId;
  }

  public void setContactDetailId(Integer contactDetailId) {
    this.contactDetailId = contactDetailId;
  }

  public DeletedContatInfo contactPointReasonName(String contactPointReasonName) {
    this.contactPointReasonName = contactPointReasonName;
    return this;
  }

   /**
   * Get contactPointReasonName
   * @return contactPointReasonName
  **/
  @Schema(description = "")
  public String getContactPointReasonName() {
    return contactPointReasonName;
  }

  public void setContactPointReasonName(String contactPointReasonName) {
    this.contactPointReasonName = contactPointReasonName;
  }

  public DeletedContatInfo virtualAddresses(List<DeletedVirtualAddress> virtualAddresses) {
    this.virtualAddresses = virtualAddresses;
    return this;
  }

  public DeletedContatInfo addVirtualAddressesItem(DeletedVirtualAddress virtualAddressesItem) {
    if (this.virtualAddresses == null) {
      this.virtualAddresses = new ArrayList<DeletedVirtualAddress>();
    }
    this.virtualAddresses.add(virtualAddressesItem);
    return this;
  }

   /**
   * Get virtualAddresses
   * @return virtualAddresses
  **/
  @Schema(description = "")
  public List<DeletedVirtualAddress> getVirtualAddresses() {
    return virtualAddresses;
  }

  public void setVirtualAddresses(List<DeletedVirtualAddress> virtualAddresses) {
    this.virtualAddresses = virtualAddresses;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeletedContatInfo deletedContatInfo = (DeletedContatInfo) o;
    return Objects.equals(this.contactPointId, deletedContatInfo.contactPointId) &&
        Objects.equals(this.contactDetailId, deletedContatInfo.contactDetailId) &&
        Objects.equals(this.contactPointReasonName, deletedContatInfo.contactPointReasonName) &&
        Objects.equals(this.virtualAddresses, deletedContatInfo.virtualAddresses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contactPointId, contactDetailId, contactPointReasonName, virtualAddresses);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeletedContatInfo {\n");
    
    sb.append("    contactPointId: ").append(toIndentedString(contactPointId)).append("\n");
    sb.append("    contactDetailId: ").append(toIndentedString(contactDetailId)).append("\n");
    sb.append("    contactPointReasonName: ").append(toIndentedString(contactPointReasonName)).append("\n");
    sb.append("    virtualAddresses: ").append(toIndentedString(virtualAddresses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
