/*
 * CcsSso.OrganisationApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uk.gov.ccs.swagger.sso.api;

import uk.gov.ccs.swagger.sso.ApiCallback;
import uk.gov.ccs.swagger.sso.ApiClient;
import uk.gov.ccs.swagger.sso.ApiException;
import uk.gov.ccs.swagger.sso.ApiResponse;
import uk.gov.ccs.swagger.sso.Configuration;
import uk.gov.ccs.swagger.sso.Pair;
import uk.gov.ccs.swagger.sso.ProgressRequestBody;
import uk.gov.ccs.swagger.sso.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import uk.gov.ccs.swagger.sso.model.InactiveOrganisationResponse;
import uk.gov.ccs.swagger.sso.model.OrganisationProfileInfo;
import uk.gov.ccs.swagger.sso.model.OrganisationProfileResponseInfo;
import uk.gov.ccs.swagger.sso.model.OrganisationRegistrationDto;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OrganisationApi {
    private ApiClient apiClient;

    public OrganisationApi() {
        this(Configuration.getDefaultApiClient());
    }

    public OrganisationApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for organisationProfileActivationByUserUserIdPost
     * @param userId  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileActivationByUserUserIdPostCall(String userId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/activation-by-user/{userId}"
            .replaceAll("\\{" + "userId" + "\\}", apiClient.escapeString(userId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileActivationByUserUserIdPostValidateBeforeCall(String userId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'userId' is set
        if (userId == null) {
            throw new ApiException("Missing the required parameter 'userId' when calling organisationProfileActivationByUserUserIdPost(Async)");
        }
        
        com.squareup.okhttp.Call call = organisationProfileActivationByUserUserIdPostCall(userId, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Allows a user to activate organisation
     * Sample request:                    POST /organisation-profile/activation-by-user/1
     * @param userId  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void organisationProfileActivationByUserUserIdPost(String userId) throws ApiException {
        organisationProfileActivationByUserUserIdPostWithHttpInfo(userId);
    }

    /**
     * Allows a user to activate organisation
     * Sample request:                    POST /organisation-profile/activation-by-user/1
     * @param userId  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> organisationProfileActivationByUserUserIdPostWithHttpInfo(String userId) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileActivationByUserUserIdPostValidateBeforeCall(userId, null, null);
        return apiClient.execute(call);
    }

    /**
     * Allows a user to activate organisation (asynchronously)
     * Sample request:                    POST /organisation-profile/activation-by-user/1
     * @param userId  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileActivationByUserUserIdPostAsync(String userId, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileActivationByUserUserIdPostValidateBeforeCall(userId, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for organisationProfileInActiveGet
     * @param createdOn  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileInActiveGetCall(String createdOn, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/in-active";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (createdOn != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("created-on", createdOn));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileInActiveGetValidateBeforeCall(String createdOn, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = organisationProfileInActiveGetCall(createdOn, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 
     * 
     * @param createdOn  (optional)
     * @return InactiveOrganisationResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InactiveOrganisationResponse organisationProfileInActiveGet(String createdOn) throws ApiException {
        ApiResponse<InactiveOrganisationResponse> resp = organisationProfileInActiveGetWithHttpInfo(createdOn);
        return resp.getData();
    }

    /**
     * 
     * 
     * @param createdOn  (optional)
     * @return ApiResponse&lt;InactiveOrganisationResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InactiveOrganisationResponse> organisationProfileInActiveGetWithHttpInfo(String createdOn) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileInActiveGetValidateBeforeCall(createdOn, null, null);
        Type localVarReturnType = new TypeToken<InactiveOrganisationResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param createdOn  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileInActiveGetAsync(String createdOn, final ApiCallback<InactiveOrganisationResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileInActiveGetValidateBeforeCall(createdOn, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InactiveOrganisationResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for organisationProfileOrganisationIdDelete
     * @param organisationId  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdDeleteCall(String organisationId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/{organisationId}"
            .replaceAll("\\{" + "organisationId" + "\\}", apiClient.escapeString(organisationId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileOrganisationIdDeleteValidateBeforeCall(String organisationId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'organisationId' is set
        if (organisationId == null) {
            throw new ApiException("Missing the required parameter 'organisationId' when calling organisationProfileOrganisationIdDelete(Async)");
        }
        
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdDeleteCall(organisationId, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Delete an existing organisation
     * Sample request:                    DELETE /organisation-profile/1
     * @param organisationId  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void organisationProfileOrganisationIdDelete(String organisationId) throws ApiException {
        organisationProfileOrganisationIdDeleteWithHttpInfo(organisationId);
    }

    /**
     * Delete an existing organisation
     * Sample request:                    DELETE /organisation-profile/1
     * @param organisationId  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> organisationProfileOrganisationIdDeleteWithHttpInfo(String organisationId) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdDeleteValidateBeforeCall(organisationId, null, null);
        return apiClient.execute(call);
    }

    /**
     * Delete an existing organisation (asynchronously)
     * Sample request:                    DELETE /organisation-profile/1
     * @param organisationId  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdDeleteAsync(String organisationId, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileOrganisationIdDeleteValidateBeforeCall(organisationId, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for organisationProfileOrganisationIdGet
     * @param organisationId  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdGetCall(String organisationId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/{organisationId}"
            .replaceAll("\\{" + "organisationId" + "\\}", apiClient.escapeString(organisationId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileOrganisationIdGetValidateBeforeCall(String organisationId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'organisationId' is set
        if (organisationId == null) {
            throw new ApiException("Missing the required parameter 'organisationId' when calling organisationProfileOrganisationIdGet(Async)");
        }
        
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdGetCall(organisationId, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get organisation profile details
     * Sample request:                    GET /organisation-profile/1
     * @param organisationId  (required)
     * @return OrganisationProfileResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OrganisationProfileResponseInfo organisationProfileOrganisationIdGet(String organisationId) throws ApiException {
        ApiResponse<OrganisationProfileResponseInfo> resp = organisationProfileOrganisationIdGetWithHttpInfo(organisationId);
        return resp.getData();
    }

    /**
     * Get organisation profile details
     * Sample request:                    GET /organisation-profile/1
     * @param organisationId  (required)
     * @return ApiResponse&lt;OrganisationProfileResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OrganisationProfileResponseInfo> organisationProfileOrganisationIdGetWithHttpInfo(String organisationId) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdGetValidateBeforeCall(organisationId, null, null);
        Type localVarReturnType = new TypeToken<OrganisationProfileResponseInfo>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get organisation profile details (asynchronously)
     * Sample request:                    GET /organisation-profile/1
     * @param organisationId  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdGetAsync(String organisationId, final ApiCallback<OrganisationProfileResponseInfo> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileOrganisationIdGetValidateBeforeCall(organisationId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OrganisationProfileResponseInfo>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for organisationProfileOrganisationIdOrgDetailsGet
     * @param organisationId  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdOrgDetailsGetCall(String organisationId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/{organisationId}/org-details"
            .replaceAll("\\{" + "organisationId" + "\\}", apiClient.escapeString(organisationId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileOrganisationIdOrgDetailsGetValidateBeforeCall(String organisationId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'organisationId' is set
        if (organisationId == null) {
            throw new ApiException("Missing the required parameter 'organisationId' when calling organisationProfileOrganisationIdOrgDetailsGet(Async)");
        }
        
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdOrgDetailsGetCall(organisationId, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get organisation details with additional Details
     * Sample request:                    GET /organisation-profile/1/org-details?type&#x3D;CII/PPG
     * @param organisationId  (required)
     * @return OrganisationProfileResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OrganisationProfileResponseInfo organisationProfileOrganisationIdOrgDetailsGet(String organisationId) throws ApiException {
        ApiResponse<OrganisationProfileResponseInfo> resp = organisationProfileOrganisationIdOrgDetailsGetWithHttpInfo(organisationId);
        return resp.getData();
    }

    /**
     * Get organisation details with additional Details
     * Sample request:                    GET /organisation-profile/1/org-details?type&#x3D;CII/PPG
     * @param organisationId  (required)
     * @return ApiResponse&lt;OrganisationProfileResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OrganisationProfileResponseInfo> organisationProfileOrganisationIdOrgDetailsGetWithHttpInfo(String organisationId) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdOrgDetailsGetValidateBeforeCall(organisationId, null, null);
        Type localVarReturnType = new TypeToken<OrganisationProfileResponseInfo>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get organisation details with additional Details (asynchronously)
     * Sample request:                    GET /organisation-profile/1/org-details?type&#x3D;CII/PPG
     * @param organisationId  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdOrgDetailsGetAsync(String organisationId, final ApiCallback<OrganisationProfileResponseInfo> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileOrganisationIdOrgDetailsGetValidateBeforeCall(organisationId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OrganisationProfileResponseInfo>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for organisationProfileOrganisationIdPut
     * @param organisationId  (required)
     * @param body  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdPutCall(String organisationId, OrganisationProfileInfo body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/{organisationId}"
            .replaceAll("\\{" + "organisationId" + "\\}", apiClient.escapeString(organisationId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/_*+json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileOrganisationIdPutValidateBeforeCall(String organisationId, OrganisationProfileInfo body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'organisationId' is set
        if (organisationId == null) {
            throw new ApiException("Missing the required parameter 'organisationId' when calling organisationProfileOrganisationIdPut(Async)");
        }
        
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdPutCall(organisationId, body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Allows a user to update organisation
     * Sample request:                    PUT /organisation-profile/1      {        \&quot;Identifier\&quot;: {          \&quot;legalName\&quot;: \&quot;Kier Limited\&quot;,          \&quot;uri\&quot;: \&quot;http://data.companieshouse.gov.uk/doc/company/1\&quot;        },        \&quot;address\&quot;: {          \&quot;streetAddress\&quot;: \&quot;1600 Amphitheatre Pkwy\&quot;,          \&quot;locality\&quot;: \&quot;Mountain View.\&quot;,          \&quot;region\&quot;: \&quot;CA.\&quot;,          \&quot;postalCode\&quot;: \&quot;94043\&quot;,          \&quot;countryCode\&quot;: \&quot;UK\&quot;        },        \&quot;Detail\&quot;: {          \&quot;organisationId\&quot;: \&quot;CiiOrgidId\&quot;,          \&quot;rightToBuy\&quot;: \&quot;true\&quot;,          \&quot;is_sme\&quot;: 1,          \&quot;is_vcse\&quot;: 1,          \&quot;active\&quot;: 1        }      }
     * @param organisationId  (required)
     * @param body  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void organisationProfileOrganisationIdPut(String organisationId, OrganisationProfileInfo body) throws ApiException {
        organisationProfileOrganisationIdPutWithHttpInfo(organisationId, body);
    }

    /**
     * Allows a user to update organisation
     * Sample request:                    PUT /organisation-profile/1      {        \&quot;Identifier\&quot;: {          \&quot;legalName\&quot;: \&quot;Kier Limited\&quot;,          \&quot;uri\&quot;: \&quot;http://data.companieshouse.gov.uk/doc/company/1\&quot;        },        \&quot;address\&quot;: {          \&quot;streetAddress\&quot;: \&quot;1600 Amphitheatre Pkwy\&quot;,          \&quot;locality\&quot;: \&quot;Mountain View.\&quot;,          \&quot;region\&quot;: \&quot;CA.\&quot;,          \&quot;postalCode\&quot;: \&quot;94043\&quot;,          \&quot;countryCode\&quot;: \&quot;UK\&quot;        },        \&quot;Detail\&quot;: {          \&quot;organisationId\&quot;: \&quot;CiiOrgidId\&quot;,          \&quot;rightToBuy\&quot;: \&quot;true\&quot;,          \&quot;is_sme\&quot;: 1,          \&quot;is_vcse\&quot;: 1,          \&quot;active\&quot;: 1        }      }
     * @param organisationId  (required)
     * @param body  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> organisationProfileOrganisationIdPutWithHttpInfo(String organisationId, OrganisationProfileInfo body) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileOrganisationIdPutValidateBeforeCall(organisationId, body, null, null);
        return apiClient.execute(call);
    }

    /**
     * Allows a user to update organisation (asynchronously)
     * Sample request:                    PUT /organisation-profile/1      {        \&quot;Identifier\&quot;: {          \&quot;legalName\&quot;: \&quot;Kier Limited\&quot;,          \&quot;uri\&quot;: \&quot;http://data.companieshouse.gov.uk/doc/company/1\&quot;        },        \&quot;address\&quot;: {          \&quot;streetAddress\&quot;: \&quot;1600 Amphitheatre Pkwy\&quot;,          \&quot;locality\&quot;: \&quot;Mountain View.\&quot;,          \&quot;region\&quot;: \&quot;CA.\&quot;,          \&quot;postalCode\&quot;: \&quot;94043\&quot;,          \&quot;countryCode\&quot;: \&quot;UK\&quot;        },        \&quot;Detail\&quot;: {          \&quot;organisationId\&quot;: \&quot;CiiOrgidId\&quot;,          \&quot;rightToBuy\&quot;: \&quot;true\&quot;,          \&quot;is_sme\&quot;: 1,          \&quot;is_vcse\&quot;: 1,          \&quot;active\&quot;: 1        }      }
     * @param organisationId  (required)
     * @param body  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileOrganisationIdPutAsync(String organisationId, OrganisationProfileInfo body, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileOrganisationIdPutValidateBeforeCall(organisationId, body, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for organisationProfilePost
     * @param body  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfilePostCall(OrganisationProfileInfo body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/organisation-profile";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/_*+json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfilePostValidateBeforeCall(OrganisationProfileInfo body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = organisationProfilePostCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Allows a user to create organisation
     * Sample request:                    POST /organisation-profile      {        \&quot;Identifier\&quot;: {          \&quot;legalName\&quot;: \&quot;Kier Limited\&quot;,          \&quot;uri\&quot;: \&quot;http://data.companieshouse.gov.uk/doc/company/1\&quot;        },        \&quot;address\&quot;: {          \&quot;streetAddress\&quot;: \&quot;1600 Amphitheatre Pkwy\&quot;,          \&quot;locality\&quot;: \&quot;Mountain View.\&quot;,          \&quot;region\&quot;: \&quot;CA.\&quot;,          \&quot;postalCode\&quot;: \&quot;94043\&quot;,          \&quot;countryCode\&quot;: \&quot;UK\&quot;        },        \&quot;Detail\&quot;: {          \&quot;organisationId\&quot;: \&quot;CiiOrgidId\&quot;,          \&quot;rightToBuy\&quot;: \&quot;true\&quot;,          \&quot;is_sme\&quot;: 1,          \&quot;is_vcse\&quot;: 1,          \&quot;active\&quot;: 1        }      }
     * @param body  (optional)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public String organisationProfilePost(OrganisationProfileInfo body) throws ApiException {
        ApiResponse<String> resp = organisationProfilePostWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Allows a user to create organisation
     * Sample request:                    POST /organisation-profile      {        \&quot;Identifier\&quot;: {          \&quot;legalName\&quot;: \&quot;Kier Limited\&quot;,          \&quot;uri\&quot;: \&quot;http://data.companieshouse.gov.uk/doc/company/1\&quot;        },        \&quot;address\&quot;: {          \&quot;streetAddress\&quot;: \&quot;1600 Amphitheatre Pkwy\&quot;,          \&quot;locality\&quot;: \&quot;Mountain View.\&quot;,          \&quot;region\&quot;: \&quot;CA.\&quot;,          \&quot;postalCode\&quot;: \&quot;94043\&quot;,          \&quot;countryCode\&quot;: \&quot;UK\&quot;        },        \&quot;Detail\&quot;: {          \&quot;organisationId\&quot;: \&quot;CiiOrgidId\&quot;,          \&quot;rightToBuy\&quot;: \&quot;true\&quot;,          \&quot;is_sme\&quot;: 1,          \&quot;is_vcse\&quot;: 1,          \&quot;active\&quot;: 1        }      }
     * @param body  (optional)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<String> organisationProfilePostWithHttpInfo(OrganisationProfileInfo body) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfilePostValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Allows a user to create organisation (asynchronously)
     * Sample request:                    POST /organisation-profile      {        \&quot;Identifier\&quot;: {          \&quot;legalName\&quot;: \&quot;Kier Limited\&quot;,          \&quot;uri\&quot;: \&quot;http://data.companieshouse.gov.uk/doc/company/1\&quot;        },        \&quot;address\&quot;: {          \&quot;streetAddress\&quot;: \&quot;1600 Amphitheatre Pkwy\&quot;,          \&quot;locality\&quot;: \&quot;Mountain View.\&quot;,          \&quot;region\&quot;: \&quot;CA.\&quot;,          \&quot;postalCode\&quot;: \&quot;94043\&quot;,          \&quot;countryCode\&quot;: \&quot;UK\&quot;        },        \&quot;Detail\&quot;: {          \&quot;organisationId\&quot;: \&quot;CiiOrgidId\&quot;,          \&quot;rightToBuy\&quot;: \&quot;true\&quot;,          \&quot;is_sme\&quot;: 1,          \&quot;is_vcse\&quot;: 1,          \&quot;active\&quot;: 1        }      }
     * @param body  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfilePostAsync(OrganisationProfileInfo body, final ApiCallback<String> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfilePostValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for organisationProfileRegistrationsPost
     * @param body  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileRegistrationsPostCall(OrganisationRegistrationDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/registrations";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json", "text/json", "application/_*+json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileRegistrationsPostValidateBeforeCall(OrganisationRegistrationDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = organisationProfileRegistrationsPostCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Register new organisation and return org id
     *  Sample request:         POST /organisation-profile/registrations       {           \&quot;ciiDetails\&quot;: {               \&quot;name\&quot;: \&quot;Test\&quot;,               \&quot;contactPoint\&quot;: {                   \&quot;email\&quot;: \&quot;tes@test.com\&quot;,                   \&quot;faxNumber\&quot;: \&quot;\&quot;,                   \&quot;name\&quot;: \&quot;test\&quot;,                   \&quot;telephone\&quot;: \&quot;\&quot;,                   \&quot;uri\&quot;: \&quot;\&quot;               },               \&quot;identifier\&quot;: {                   \&quot;id\&quot;: \&quot;111111111\&quot;,                   \&quot;legalName\&quot;: \&quot;test\&quot;,                   \&quot;scheme\&quot;: \&quot;GB-CHC\&quot;,                   \&quot;uri\&quot;: \&quot;\&quot;               },               \&quot;address\&quot;: {                   \&quot;countryName\&quot;: \&quot;England\&quot;,                   \&quot;countryCode\&quot;: \&quot;GB-ENG\&quot;,                   \&quot;locality\&quot;: \&quot;Preston\&quot;,                   \&quot;postalCode\&quot;: \&quot;PR2 9HP\&quot;,                   \&quot;region\&quot;: \&quot;\&quot;,                   \&quot;streetAddress\&quot;: \&quot;Tower Lane, Fulwood\&quot;               },               \&quot;additionalIdentifiers\&quot;: []           },           \&quot;rightToBuy\&quot;: false,           \&quot;businessType\&quot;: \&quot;\&quot;,           \&quot;supplierBuyerType\&quot;: 1,           \&quot;adminUserName\&quot;: \&quot;test@testing.com\&quot;,           \&quot;adminUserFirstName\&quot;: \&quot;test\&quot;,           \&quot;adminUserLastName\&quot;: \&quot;test\&quot;       }
     * @param body  (optional)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public String organisationProfileRegistrationsPost(OrganisationRegistrationDto body) throws ApiException {
        ApiResponse<String> resp = organisationProfileRegistrationsPostWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Register new organisation and return org id
     *  Sample request:         POST /organisation-profile/registrations       {           \&quot;ciiDetails\&quot;: {               \&quot;name\&quot;: \&quot;Test\&quot;,               \&quot;contactPoint\&quot;: {                   \&quot;email\&quot;: \&quot;tes@test.com\&quot;,                   \&quot;faxNumber\&quot;: \&quot;\&quot;,                   \&quot;name\&quot;: \&quot;test\&quot;,                   \&quot;telephone\&quot;: \&quot;\&quot;,                   \&quot;uri\&quot;: \&quot;\&quot;               },               \&quot;identifier\&quot;: {                   \&quot;id\&quot;: \&quot;111111111\&quot;,                   \&quot;legalName\&quot;: \&quot;test\&quot;,                   \&quot;scheme\&quot;: \&quot;GB-CHC\&quot;,                   \&quot;uri\&quot;: \&quot;\&quot;               },               \&quot;address\&quot;: {                   \&quot;countryName\&quot;: \&quot;England\&quot;,                   \&quot;countryCode\&quot;: \&quot;GB-ENG\&quot;,                   \&quot;locality\&quot;: \&quot;Preston\&quot;,                   \&quot;postalCode\&quot;: \&quot;PR2 9HP\&quot;,                   \&quot;region\&quot;: \&quot;\&quot;,                   \&quot;streetAddress\&quot;: \&quot;Tower Lane, Fulwood\&quot;               },               \&quot;additionalIdentifiers\&quot;: []           },           \&quot;rightToBuy\&quot;: false,           \&quot;businessType\&quot;: \&quot;\&quot;,           \&quot;supplierBuyerType\&quot;: 1,           \&quot;adminUserName\&quot;: \&quot;test@testing.com\&quot;,           \&quot;adminUserFirstName\&quot;: \&quot;test\&quot;,           \&quot;adminUserLastName\&quot;: \&quot;test\&quot;       }
     * @param body  (optional)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<String> organisationProfileRegistrationsPostWithHttpInfo(OrganisationRegistrationDto body) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileRegistrationsPostValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Register new organisation and return org id (asynchronously)
     *  Sample request:         POST /organisation-profile/registrations       {           \&quot;ciiDetails\&quot;: {               \&quot;name\&quot;: \&quot;Test\&quot;,               \&quot;contactPoint\&quot;: {                   \&quot;email\&quot;: \&quot;tes@test.com\&quot;,                   \&quot;faxNumber\&quot;: \&quot;\&quot;,                   \&quot;name\&quot;: \&quot;test\&quot;,                   \&quot;telephone\&quot;: \&quot;\&quot;,                   \&quot;uri\&quot;: \&quot;\&quot;               },               \&quot;identifier\&quot;: {                   \&quot;id\&quot;: \&quot;111111111\&quot;,                   \&quot;legalName\&quot;: \&quot;test\&quot;,                   \&quot;scheme\&quot;: \&quot;GB-CHC\&quot;,                   \&quot;uri\&quot;: \&quot;\&quot;               },               \&quot;address\&quot;: {                   \&quot;countryName\&quot;: \&quot;England\&quot;,                   \&quot;countryCode\&quot;: \&quot;GB-ENG\&quot;,                   \&quot;locality\&quot;: \&quot;Preston\&quot;,                   \&quot;postalCode\&quot;: \&quot;PR2 9HP\&quot;,                   \&quot;region\&quot;: \&quot;\&quot;,                   \&quot;streetAddress\&quot;: \&quot;Tower Lane, Fulwood\&quot;               },               \&quot;additionalIdentifiers\&quot;: []           },           \&quot;rightToBuy\&quot;: false,           \&quot;businessType\&quot;: \&quot;\&quot;,           \&quot;supplierBuyerType\&quot;: 1,           \&quot;adminUserName\&quot;: \&quot;test@testing.com\&quot;,           \&quot;adminUserFirstName\&quot;: \&quot;test\&quot;,           \&quot;adminUserLastName\&quot;: \&quot;test\&quot;       }
     * @param body  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileRegistrationsPostAsync(OrganisationRegistrationDto body, final ApiCallback<String> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileRegistrationsPostValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
