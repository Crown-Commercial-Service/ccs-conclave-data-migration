/*
 * CcsSso.OrganisationApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uk.gov.ccs.swagger.sso.api;

import uk.gov.ccs.swagger.sso.ApiCallback;
import uk.gov.ccs.swagger.sso.ApiClient;
import uk.gov.ccs.swagger.sso.ApiException;
import uk.gov.ccs.swagger.sso.ApiResponse;
import uk.gov.ccs.swagger.sso.Configuration;
import uk.gov.ccs.swagger.sso.Pair;
import uk.gov.ccs.swagger.sso.ProgressRequestBody;
import uk.gov.ccs.swagger.sso.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import uk.gov.ccs.swagger.sso.model.AuditLogResponse;
import org.threeten.bp.OffsetDateTime;
import uk.gov.ccs.swagger.sso.model.OrganisationDto;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OrganisationDataApi {
    private ApiClient apiClient;

    public OrganisationDataApi() {
        this(Configuration.getDefaultApiClient());
    }

    public OrganisationDataApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for organisationProfileDataAuditGet
     * @param startDate  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileDataAuditGetCall(String startDate, Integer pageSize, Integer currentPage, Boolean isPagination, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/data/audit";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (startDate != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("startDate", startDate));
        if (pageSize != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("PageSize", pageSize));
        if (currentPage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("CurrentPage", currentPage));
        if (isPagination != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("IsPagination", isPagination));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileDataAuditGetValidateBeforeCall(String startDate, Integer pageSize, Integer currentPage, Boolean isPagination, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = organisationProfileDataAuditGetCall(startDate, pageSize, currentPage, isPagination, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Audit data
     * Sample request:                    GET /data/audit
     * @param startDate  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @return AuditLogResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public AuditLogResponse organisationProfileDataAuditGet(String startDate, Integer pageSize, Integer currentPage, Boolean isPagination) throws ApiException {
        ApiResponse<AuditLogResponse> resp = organisationProfileDataAuditGetWithHttpInfo(startDate, pageSize, currentPage, isPagination);
        return resp.getData();
    }

    /**
     * Get Audit data
     * Sample request:                    GET /data/audit
     * @param startDate  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @return ApiResponse&lt;AuditLogResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<AuditLogResponse> organisationProfileDataAuditGetWithHttpInfo(String startDate, Integer pageSize, Integer currentPage, Boolean isPagination) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileDataAuditGetValidateBeforeCall(startDate, pageSize, currentPage, isPagination, null, null);
        Type localVarReturnType = new TypeToken<AuditLogResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Audit data (asynchronously)
     * Sample request:                    GET /data/audit
     * @param startDate  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileDataAuditGetAsync(String startDate, Integer pageSize, Integer currentPage, Boolean isPagination, final ApiCallback<AuditLogResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileDataAuditGetValidateBeforeCall(startDate, pageSize, currentPage, isPagination, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<AuditLogResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for organisationProfileDataGet
     * @param organisationName  (optional)
     * @param exactMatchName  (optional)
     * @param includeAll  (optional)
     * @param isMatchName  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param untilDateTime  (optional)
     * @param lastmodifiedDateTime  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileDataGetCall(String organisationName, Boolean exactMatchName, Boolean includeAll, Boolean isMatchName, OffsetDateTime startDate, OffsetDateTime endDate, OffsetDateTime untilDateTime, String lastmodifiedDateTime, Integer pageSize, Integer currentPage, Boolean isPagination, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/data";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (organisationName != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("organisation-name", organisationName));
        if (exactMatchName != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("exact-match-name", exactMatchName));
        if (includeAll != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("include-all", includeAll));
        if (isMatchName != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("is-match-name", isMatchName));
        if (startDate != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("start-date", startDate));
        if (endDate != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("end-date", endDate));
        if (untilDateTime != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("until-date-time", untilDateTime));
        if (lastmodifiedDateTime != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("lastmodified-date-time", lastmodifiedDateTime));
        if (pageSize != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("PageSize", pageSize));
        if (currentPage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("CurrentPage", currentPage));
        if (isPagination != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("IsPagination", isPagination));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileDataGetValidateBeforeCall(String organisationName, Boolean exactMatchName, Boolean includeAll, Boolean isMatchName, OffsetDateTime startDate, OffsetDateTime endDate, OffsetDateTime untilDateTime, String lastmodifiedDateTime, Integer pageSize, Integer currentPage, Boolean isPagination, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = organisationProfileDataGetCall(organisationName, exactMatchName, includeAll, isMatchName, startDate, endDate, untilDateTime, lastmodifiedDateTime, pageSize, currentPage, isPagination, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get organisation details with filters and pagination
     * Sample request:                    GET /organisation-profile/data
     * @param organisationName  (optional)
     * @param exactMatchName  (optional)
     * @param includeAll  (optional)
     * @param isMatchName  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param untilDateTime  (optional)
     * @param lastmodifiedDateTime  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @return OrganisationDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OrganisationDto organisationProfileDataGet(String organisationName, Boolean exactMatchName, Boolean includeAll, Boolean isMatchName, OffsetDateTime startDate, OffsetDateTime endDate, OffsetDateTime untilDateTime, String lastmodifiedDateTime, Integer pageSize, Integer currentPage, Boolean isPagination) throws ApiException {
        ApiResponse<OrganisationDto> resp = organisationProfileDataGetWithHttpInfo(organisationName, exactMatchName, includeAll, isMatchName, startDate, endDate, untilDateTime, lastmodifiedDateTime, pageSize, currentPage, isPagination);
        return resp.getData();
    }

    /**
     * Get organisation details with filters and pagination
     * Sample request:                    GET /organisation-profile/data
     * @param organisationName  (optional)
     * @param exactMatchName  (optional)
     * @param includeAll  (optional)
     * @param isMatchName  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param untilDateTime  (optional)
     * @param lastmodifiedDateTime  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @return ApiResponse&lt;OrganisationDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OrganisationDto> organisationProfileDataGetWithHttpInfo(String organisationName, Boolean exactMatchName, Boolean includeAll, Boolean isMatchName, OffsetDateTime startDate, OffsetDateTime endDate, OffsetDateTime untilDateTime, String lastmodifiedDateTime, Integer pageSize, Integer currentPage, Boolean isPagination) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileDataGetValidateBeforeCall(organisationName, exactMatchName, includeAll, isMatchName, startDate, endDate, untilDateTime, lastmodifiedDateTime, pageSize, currentPage, isPagination, null, null);
        Type localVarReturnType = new TypeToken<OrganisationDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get organisation details with filters and pagination (asynchronously)
     * Sample request:                    GET /organisation-profile/data
     * @param organisationName  (optional)
     * @param exactMatchName  (optional)
     * @param includeAll  (optional)
     * @param isMatchName  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param untilDateTime  (optional)
     * @param lastmodifiedDateTime  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileDataGetAsync(String organisationName, Boolean exactMatchName, Boolean includeAll, Boolean isMatchName, OffsetDateTime startDate, OffsetDateTime endDate, OffsetDateTime untilDateTime, String lastmodifiedDateTime, Integer pageSize, Integer currentPage, Boolean isPagination, final ApiCallback<OrganisationDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileDataGetValidateBeforeCall(organisationName, exactMatchName, includeAll, isMatchName, startDate, endDate, untilDateTime, lastmodifiedDateTime, pageSize, currentPage, isPagination, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OrganisationDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for organisationProfileDataModifiedGroupsGet
     * @param modifieddate  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call organisationProfileDataModifiedGroupsGetCall(String modifieddate, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/organisation-profile/data/modified-groups";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (modifieddate != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("modifieddate", modifieddate));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call organisationProfileDataModifiedGroupsGetValidateBeforeCall(String modifieddate, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = organisationProfileDataModifiedGroupsGetCall(modifieddate, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Allows a user to retrieves modified organisationUserGroupIds
     * Sample request:                    GET /organisation-profile/data/modified-groups
     * @param modifieddate  (optional)
     * @return List&lt;Integer&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<Integer> organisationProfileDataModifiedGroupsGet(String modifieddate) throws ApiException {
        ApiResponse<List<Integer>> resp = organisationProfileDataModifiedGroupsGetWithHttpInfo(modifieddate);
        return resp.getData();
    }

    /**
     * Allows a user to retrieves modified organisationUserGroupIds
     * Sample request:                    GET /organisation-profile/data/modified-groups
     * @param modifieddate  (optional)
     * @return ApiResponse&lt;List&lt;Integer&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<Integer>> organisationProfileDataModifiedGroupsGetWithHttpInfo(String modifieddate) throws ApiException {
        com.squareup.okhttp.Call call = organisationProfileDataModifiedGroupsGetValidateBeforeCall(modifieddate, null, null);
        Type localVarReturnType = new TypeToken<List<Integer>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Allows a user to retrieves modified organisationUserGroupIds (asynchronously)
     * Sample request:                    GET /organisation-profile/data/modified-groups
     * @param modifieddate  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call organisationProfileDataModifiedGroupsGetAsync(String modifieddate, final ApiCallback<List<Integer>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = organisationProfileDataModifiedGroupsGetValidateBeforeCall(modifieddate, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<Integer>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
