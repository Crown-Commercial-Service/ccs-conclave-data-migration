/*
 * CcsSso.WrapperApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uk.gov.ccs.swagger.sso.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import uk.gov.ccs.swagger.sso.model.GroupAccessRole;
import uk.gov.ccs.swagger.sso.model.RolePermissionInfo;
/**
 * UserResponseDetail
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-23T13:17:13.002004+01:00[Europe/London]")
public class UserResponseDetail {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("identityProviderId")
  private Integer identityProviderId = null;

  @SerializedName("identityProvider")
  private String identityProvider = null;

  @SerializedName("identityProviderDisplayName")
  private String identityProviderDisplayName = null;

  @SerializedName("userGroups")
  private List<GroupAccessRole> userGroups = null;

  @SerializedName("canChangePassword")
  private Boolean canChangePassword = null;

  @SerializedName("rolePermissionInfo")
  private List<RolePermissionInfo> rolePermissionInfo = null;

  public UserResponseDetail id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public UserResponseDetail identityProviderId(Integer identityProviderId) {
    this.identityProviderId = identityProviderId;
    return this;
  }

   /**
   * Get identityProviderId
   * @return identityProviderId
  **/
  @Schema(description = "")
  public Integer getIdentityProviderId() {
    return identityProviderId;
  }

  public void setIdentityProviderId(Integer identityProviderId) {
    this.identityProviderId = identityProviderId;
  }

  public UserResponseDetail identityProvider(String identityProvider) {
    this.identityProvider = identityProvider;
    return this;
  }

   /**
   * Get identityProvider
   * @return identityProvider
  **/
  @Schema(description = "")
  public String getIdentityProvider() {
    return identityProvider;
  }

  public void setIdentityProvider(String identityProvider) {
    this.identityProvider = identityProvider;
  }

  public UserResponseDetail identityProviderDisplayName(String identityProviderDisplayName) {
    this.identityProviderDisplayName = identityProviderDisplayName;
    return this;
  }

   /**
   * Get identityProviderDisplayName
   * @return identityProviderDisplayName
  **/
  @Schema(description = "")
  public String getIdentityProviderDisplayName() {
    return identityProviderDisplayName;
  }

  public void setIdentityProviderDisplayName(String identityProviderDisplayName) {
    this.identityProviderDisplayName = identityProviderDisplayName;
  }

  public UserResponseDetail userGroups(List<GroupAccessRole> userGroups) {
    this.userGroups = userGroups;
    return this;
  }

  public UserResponseDetail addUserGroupsItem(GroupAccessRole userGroupsItem) {
    if (this.userGroups == null) {
      this.userGroups = new ArrayList<GroupAccessRole>();
    }
    this.userGroups.add(userGroupsItem);
    return this;
  }

   /**
   * Get userGroups
   * @return userGroups
  **/
  @Schema(description = "")
  public List<GroupAccessRole> getUserGroups() {
    return userGroups;
  }

  public void setUserGroups(List<GroupAccessRole> userGroups) {
    this.userGroups = userGroups;
  }

  public UserResponseDetail canChangePassword(Boolean canChangePassword) {
    this.canChangePassword = canChangePassword;
    return this;
  }

   /**
   * Get canChangePassword
   * @return canChangePassword
  **/
  @Schema(description = "")
  public Boolean isCanChangePassword() {
    return canChangePassword;
  }

  public void setCanChangePassword(Boolean canChangePassword) {
    this.canChangePassword = canChangePassword;
  }

  public UserResponseDetail rolePermissionInfo(List<RolePermissionInfo> rolePermissionInfo) {
    this.rolePermissionInfo = rolePermissionInfo;
    return this;
  }

  public UserResponseDetail addRolePermissionInfoItem(RolePermissionInfo rolePermissionInfoItem) {
    if (this.rolePermissionInfo == null) {
      this.rolePermissionInfo = new ArrayList<RolePermissionInfo>();
    }
    this.rolePermissionInfo.add(rolePermissionInfoItem);
    return this;
  }

   /**
   * Get rolePermissionInfo
   * @return rolePermissionInfo
  **/
  @Schema(description = "")
  public List<RolePermissionInfo> getRolePermissionInfo() {
    return rolePermissionInfo;
  }

  public void setRolePermissionInfo(List<RolePermissionInfo> rolePermissionInfo) {
    this.rolePermissionInfo = rolePermissionInfo;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserResponseDetail userResponseDetail = (UserResponseDetail) o;
    return Objects.equals(this.id, userResponseDetail.id) &&
        Objects.equals(this.identityProviderId, userResponseDetail.identityProviderId) &&
        Objects.equals(this.identityProvider, userResponseDetail.identityProvider) &&
        Objects.equals(this.identityProviderDisplayName, userResponseDetail.identityProviderDisplayName) &&
        Objects.equals(this.userGroups, userResponseDetail.userGroups) &&
        Objects.equals(this.canChangePassword, userResponseDetail.canChangePassword) &&
        Objects.equals(this.rolePermissionInfo, userResponseDetail.rolePermissionInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, identityProviderId, identityProvider, identityProviderDisplayName, userGroups, canChangePassword, rolePermissionInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserResponseDetail {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    identityProviderId: ").append(toIndentedString(identityProviderId)).append("\n");
    sb.append("    identityProvider: ").append(toIndentedString(identityProvider)).append("\n");
    sb.append("    identityProviderDisplayName: ").append(toIndentedString(identityProviderDisplayName)).append("\n");
    sb.append("    userGroups: ").append(toIndentedString(userGroups)).append("\n");
    sb.append("    canChangePassword: ").append(toIndentedString(canChangePassword)).append("\n");
    sb.append("    rolePermissionInfo: ").append(toIndentedString(rolePermissionInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
