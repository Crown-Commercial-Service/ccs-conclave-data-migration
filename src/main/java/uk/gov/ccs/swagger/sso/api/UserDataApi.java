/*
 * CcsSso.UserApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uk.gov.ccs.swagger.sso.api;

import uk.gov.ccs.swagger.sso.ApiCallback;
import uk.gov.ccs.swagger.sso.ApiClient;
import uk.gov.ccs.swagger.sso.ApiException;
import uk.gov.ccs.swagger.sso.ApiResponse;
import uk.gov.ccs.swagger.sso.Configuration;
import uk.gov.ccs.swagger.sso.Pair;
import uk.gov.ccs.swagger.sso.ProgressRequestBody;
import uk.gov.ccs.swagger.sso.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import uk.gov.ccs.swagger.sso.model.AuditLogResponse;
import uk.gov.ccs.swagger.sso.model.UserDataResponseInfo;
import uk.gov.ccs.swagger.sso.model.UserReportDetail;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class UserDataApi {
    private ApiClient apiClient;

    public UserDataApi() {
        this(Configuration.getDefaultApiClient());
    }

    public UserDataApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for userProfileDataAdminEmailIdsGet
     * @param organisationId  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call userProfileDataAdminEmailIdsGetCall(String organisationId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/user-profile/data/admin-email-ids";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (organisationId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("organisation-id", organisationId));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call userProfileDataAdminEmailIdsGetValidateBeforeCall(String organisationId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = userProfileDataAdminEmailIdsGetCall(organisationId, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get organisation admin email-ids
     * Sample request:                    Get /user-profile/data/admin-email-ids?organisation-id&#x3D;1
     * @param organisationId  (optional)
     * @return List&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<String> userProfileDataAdminEmailIdsGet(String organisationId) throws ApiException {
        ApiResponse<List<String>> resp = userProfileDataAdminEmailIdsGetWithHttpInfo(organisationId);
        return resp.getData();
    }

    /**
     * Get organisation admin email-ids
     * Sample request:                    Get /user-profile/data/admin-email-ids?organisation-id&#x3D;1
     * @param organisationId  (optional)
     * @return ApiResponse&lt;List&lt;String&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<String>> userProfileDataAdminEmailIdsGetWithHttpInfo(String organisationId) throws ApiException {
        com.squareup.okhttp.Call call = userProfileDataAdminEmailIdsGetValidateBeforeCall(organisationId, null, null);
        Type localVarReturnType = new TypeToken<List<String>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get organisation admin email-ids (asynchronously)
     * Sample request:                    Get /user-profile/data/admin-email-ids?organisation-id&#x3D;1
     * @param organisationId  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call userProfileDataAdminEmailIdsGetAsync(String organisationId, final ApiCallback<List<String>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = userProfileDataAdminEmailIdsGetValidateBeforeCall(organisationId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<String>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for userProfileDataAuditGet
     * @param startDate  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call userProfileDataAuditGetCall(String startDate, Integer pageSize, Integer currentPage, Boolean isPagination, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/user-profile/data/audit";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (startDate != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("startDate", startDate));
        if (pageSize != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("PageSize", pageSize));
        if (currentPage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("CurrentPage", currentPage));
        if (isPagination != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("IsPagination", isPagination));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call userProfileDataAuditGetValidateBeforeCall(String startDate, Integer pageSize, Integer currentPage, Boolean isPagination, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = userProfileDataAuditGetCall(startDate, pageSize, currentPage, isPagination, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Audit data
     * Sample request:                    GET /user-profile/data/audit
     * @param startDate  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @return AuditLogResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public AuditLogResponse userProfileDataAuditGet(String startDate, Integer pageSize, Integer currentPage, Boolean isPagination) throws ApiException {
        ApiResponse<AuditLogResponse> resp = userProfileDataAuditGetWithHttpInfo(startDate, pageSize, currentPage, isPagination);
        return resp.getData();
    }

    /**
     * Get Audit data
     * Sample request:                    GET /user-profile/data/audit
     * @param startDate  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @return ApiResponse&lt;AuditLogResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<AuditLogResponse> userProfileDataAuditGetWithHttpInfo(String startDate, Integer pageSize, Integer currentPage, Boolean isPagination) throws ApiException {
        com.squareup.okhttp.Call call = userProfileDataAuditGetValidateBeforeCall(startDate, pageSize, currentPage, isPagination, null, null);
        Type localVarReturnType = new TypeToken<AuditLogResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Audit data (asynchronously)
     * Sample request:                    GET /user-profile/data/audit
     * @param startDate  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call userProfileDataAuditGetAsync(String startDate, Integer pageSize, Integer currentPage, Boolean isPagination, final ApiCallback<AuditLogResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = userProfileDataAuditGetValidateBeforeCall(startDate, pageSize, currentPage, isPagination, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<AuditLogResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for userProfileDataGet
     * @param name  (optional)
     * @param includeCiiOrganisationIds  (optional)
     * @param excludeCiiOrganisationIds  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call userProfileDataGetCall(String name, String includeCiiOrganisationIds, String excludeCiiOrganisationIds, Integer pageSize, Integer currentPage, Boolean isPagination, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/user-profile/data";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (name != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("name", name));
        if (includeCiiOrganisationIds != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("include-cii-organisation-ids", includeCiiOrganisationIds));
        if (excludeCiiOrganisationIds != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("exclude-cii-organisation-ids", excludeCiiOrganisationIds));
        if (pageSize != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("PageSize", pageSize));
        if (currentPage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("CurrentPage", currentPage));
        if (isPagination != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("IsPagination", isPagination));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call userProfileDataGetValidateBeforeCall(String name, String includeCiiOrganisationIds, String excludeCiiOrganisationIds, Integer pageSize, Integer currentPage, Boolean isPagination, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = userProfileDataGetCall(name, includeCiiOrganisationIds, excludeCiiOrganisationIds, pageSize, currentPage, isPagination, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Allows a user to get user details based on pagination and data filters
     * Sample request:                    POST /user-profile/data
     * @param name  (optional)
     * @param includeCiiOrganisationIds  (optional)
     * @param excludeCiiOrganisationIds  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @return UserDataResponseInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public UserDataResponseInfo userProfileDataGet(String name, String includeCiiOrganisationIds, String excludeCiiOrganisationIds, Integer pageSize, Integer currentPage, Boolean isPagination) throws ApiException {
        ApiResponse<UserDataResponseInfo> resp = userProfileDataGetWithHttpInfo(name, includeCiiOrganisationIds, excludeCiiOrganisationIds, pageSize, currentPage, isPagination);
        return resp.getData();
    }

    /**
     * Allows a user to get user details based on pagination and data filters
     * Sample request:                    POST /user-profile/data
     * @param name  (optional)
     * @param includeCiiOrganisationIds  (optional)
     * @param excludeCiiOrganisationIds  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @return ApiResponse&lt;UserDataResponseInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<UserDataResponseInfo> userProfileDataGetWithHttpInfo(String name, String includeCiiOrganisationIds, String excludeCiiOrganisationIds, Integer pageSize, Integer currentPage, Boolean isPagination) throws ApiException {
        com.squareup.okhttp.Call call = userProfileDataGetValidateBeforeCall(name, includeCiiOrganisationIds, excludeCiiOrganisationIds, pageSize, currentPage, isPagination, null, null);
        Type localVarReturnType = new TypeToken<UserDataResponseInfo>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Allows a user to get user details based on pagination and data filters (asynchronously)
     * Sample request:                    POST /user-profile/data
     * @param name  (optional)
     * @param includeCiiOrganisationIds  (optional)
     * @param excludeCiiOrganisationIds  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call userProfileDataGetAsync(String name, String includeCiiOrganisationIds, String excludeCiiOrganisationIds, Integer pageSize, Integer currentPage, Boolean isPagination, final ApiCallback<UserDataResponseInfo> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = userProfileDataGetValidateBeforeCall(name, includeCiiOrganisationIds, excludeCiiOrganisationIds, pageSize, currentPage, isPagination, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<UserDataResponseInfo>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for userProfileDataUserReportGet
     * @param modifieddate  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call userProfileDataUserReportGetCall(String modifieddate, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/user-profile/data/user-report";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (modifieddate != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("modifieddate", modifieddate));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call userProfileDataUserReportGetValidateBeforeCall(String modifieddate, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = userProfileDataUserReportGetCall(modifieddate, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Retrives modified user details
     * Sample request:                    POST /user-profile/data/user-report
     * @param modifieddate  (optional)
     * @return List&lt;UserReportDetail&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<UserReportDetail> userProfileDataUserReportGet(String modifieddate) throws ApiException {
        ApiResponse<List<UserReportDetail>> resp = userProfileDataUserReportGetWithHttpInfo(modifieddate);
        return resp.getData();
    }

    /**
     * Retrives modified user details
     * Sample request:                    POST /user-profile/data/user-report
     * @param modifieddate  (optional)
     * @return ApiResponse&lt;List&lt;UserReportDetail&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<UserReportDetail>> userProfileDataUserReportGetWithHttpInfo(String modifieddate) throws ApiException {
        com.squareup.okhttp.Call call = userProfileDataUserReportGetValidateBeforeCall(modifieddate, null, null);
        Type localVarReturnType = new TypeToken<List<UserReportDetail>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Retrives modified user details (asynchronously)
     * Sample request:                    POST /user-profile/data/user-report
     * @param modifieddate  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call userProfileDataUserReportGetAsync(String modifieddate, final ApiCallback<List<UserReportDetail>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = userProfileDataUserReportGetValidateBeforeCall(modifieddate, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<UserReportDetail>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
