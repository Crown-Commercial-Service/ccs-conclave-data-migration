/*
 * CcsSso.UserApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uk.gov.ccs.swagger.sso.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * UserAccessRolePendingDetailsInfo
 */


public class UserAccessRolePendingDetailsInfo {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("organisationEligibleRoleId")
  private Integer organisationEligibleRoleId = null;

  @SerializedName("status")
  private Integer status = null;

  @SerializedName("organisationUserGroupId")
  private Integer organisationUserGroupId = null;

  @SerializedName("isDeleted")
  private Boolean isDeleted = null;

  @SerializedName("sendEmailNotification")
  private Boolean sendEmailNotification = null;

  @SerializedName("createdUserId")
  private Integer createdUserId = null;

  @SerializedName("createdBy")
  private String createdBy = null;

  @SerializedName("organisationId")
  private String organisationId = null;

  @SerializedName("userName")
  private String userName = null;

  @SerializedName("lastUpdatedOnUtc")
  private OffsetDateTime lastUpdatedOnUtc = null;

  public UserAccessRolePendingDetailsInfo id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public UserAccessRolePendingDetailsInfo organisationEligibleRoleId(Integer organisationEligibleRoleId) {
    this.organisationEligibleRoleId = organisationEligibleRoleId;
    return this;
  }

   /**
   * Get organisationEligibleRoleId
   * @return organisationEligibleRoleId
  **/
  @Schema(description = "")
  public Integer getOrganisationEligibleRoleId() {
    return organisationEligibleRoleId;
  }

  public void setOrganisationEligibleRoleId(Integer organisationEligibleRoleId) {
    this.organisationEligibleRoleId = organisationEligibleRoleId;
  }

  public UserAccessRolePendingDetailsInfo status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }

  public UserAccessRolePendingDetailsInfo organisationUserGroupId(Integer organisationUserGroupId) {
    this.organisationUserGroupId = organisationUserGroupId;
    return this;
  }

   /**
   * Get organisationUserGroupId
   * @return organisationUserGroupId
  **/
  @Schema(description = "")
  public Integer getOrganisationUserGroupId() {
    return organisationUserGroupId;
  }

  public void setOrganisationUserGroupId(Integer organisationUserGroupId) {
    this.organisationUserGroupId = organisationUserGroupId;
  }

  public UserAccessRolePendingDetailsInfo isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Get isDeleted
   * @return isDeleted
  **/
  @Schema(description = "")
  public Boolean isIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }

  public UserAccessRolePendingDetailsInfo sendEmailNotification(Boolean sendEmailNotification) {
    this.sendEmailNotification = sendEmailNotification;
    return this;
  }

   /**
   * Get sendEmailNotification
   * @return sendEmailNotification
  **/
  @Schema(description = "")
  public Boolean isSendEmailNotification() {
    return sendEmailNotification;
  }

  public void setSendEmailNotification(Boolean sendEmailNotification) {
    this.sendEmailNotification = sendEmailNotification;
  }

  public UserAccessRolePendingDetailsInfo createdUserId(Integer createdUserId) {
    this.createdUserId = createdUserId;
    return this;
  }

   /**
   * Get createdUserId
   * @return createdUserId
  **/
  @Schema(description = "")
  public Integer getCreatedUserId() {
    return createdUserId;
  }

  public void setCreatedUserId(Integer createdUserId) {
    this.createdUserId = createdUserId;
  }

  public UserAccessRolePendingDetailsInfo createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @Schema(description = "")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public UserAccessRolePendingDetailsInfo organisationId(String organisationId) {
    this.organisationId = organisationId;
    return this;
  }

   /**
   * Get organisationId
   * @return organisationId
  **/
  @Schema(description = "")
  public String getOrganisationId() {
    return organisationId;
  }

  public void setOrganisationId(String organisationId) {
    this.organisationId = organisationId;
  }

  public UserAccessRolePendingDetailsInfo userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @Schema(description = "")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }

  public UserAccessRolePendingDetailsInfo lastUpdatedOnUtc(OffsetDateTime lastUpdatedOnUtc) {
    this.lastUpdatedOnUtc = lastUpdatedOnUtc;
    return this;
  }

   /**
   * Get lastUpdatedOnUtc
   * @return lastUpdatedOnUtc
  **/
  @Schema(description = "")
  public OffsetDateTime getLastUpdatedOnUtc() {
    return lastUpdatedOnUtc;
  }

  public void setLastUpdatedOnUtc(OffsetDateTime lastUpdatedOnUtc) {
    this.lastUpdatedOnUtc = lastUpdatedOnUtc;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserAccessRolePendingDetailsInfo userAccessRolePendingDetailsInfo = (UserAccessRolePendingDetailsInfo) o;
    return Objects.equals(this.id, userAccessRolePendingDetailsInfo.id) &&
        Objects.equals(this.organisationEligibleRoleId, userAccessRolePendingDetailsInfo.organisationEligibleRoleId) &&
        Objects.equals(this.status, userAccessRolePendingDetailsInfo.status) &&
        Objects.equals(this.organisationUserGroupId, userAccessRolePendingDetailsInfo.organisationUserGroupId) &&
        Objects.equals(this.isDeleted, userAccessRolePendingDetailsInfo.isDeleted) &&
        Objects.equals(this.sendEmailNotification, userAccessRolePendingDetailsInfo.sendEmailNotification) &&
        Objects.equals(this.createdUserId, userAccessRolePendingDetailsInfo.createdUserId) &&
        Objects.equals(this.createdBy, userAccessRolePendingDetailsInfo.createdBy) &&
        Objects.equals(this.organisationId, userAccessRolePendingDetailsInfo.organisationId) &&
        Objects.equals(this.userName, userAccessRolePendingDetailsInfo.userName) &&
        Objects.equals(this.lastUpdatedOnUtc, userAccessRolePendingDetailsInfo.lastUpdatedOnUtc);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, organisationEligibleRoleId, status, organisationUserGroupId, isDeleted, sendEmailNotification, createdUserId, createdBy, organisationId, userName, lastUpdatedOnUtc);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserAccessRolePendingDetailsInfo {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    organisationEligibleRoleId: ").append(toIndentedString(organisationEligibleRoleId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    organisationUserGroupId: ").append(toIndentedString(organisationUserGroupId)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    sendEmailNotification: ").append(toIndentedString(sendEmailNotification)).append("\n");
    sb.append("    createdUserId: ").append(toIndentedString(createdUserId)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    organisationId: ").append(toIndentedString(organisationId)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    lastUpdatedOnUtc: ").append(toIndentedString(lastUpdatedOnUtc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
