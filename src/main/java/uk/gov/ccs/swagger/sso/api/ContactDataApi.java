/*
 * CcsSso.ContactApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uk.gov.ccs.swagger.sso.api;

import uk.gov.ccs.swagger.sso.ApiCallback;
import uk.gov.ccs.swagger.sso.ApiClient;
import uk.gov.ccs.swagger.sso.ApiException;
import uk.gov.ccs.swagger.sso.ApiResponse;
import uk.gov.ccs.swagger.sso.Configuration;
import uk.gov.ccs.swagger.sso.Pair;
import uk.gov.ccs.swagger.sso.ProgressRequestBody;
import uk.gov.ccs.swagger.sso.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import uk.gov.ccs.swagger.sso.model.AuditLogResponse;
import uk.gov.ccs.swagger.sso.model.ModifiedOrgContactInfo;
import uk.gov.ccs.swagger.sso.model.ModifiedSiteContactInfo;
import uk.gov.ccs.swagger.sso.model.ModifiedUserContactInfo;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ContactDataApi {
    private ApiClient apiClient;

    public ContactDataApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ContactDataApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for contactServiceDataAuditGet
     * @param startDate  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call contactServiceDataAuditGetCall(String startDate, Integer pageSize, Integer currentPage, Boolean isPagination, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/contact-service/data/audit";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (startDate != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("start-date", startDate));
        if (pageSize != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("PageSize", pageSize));
        if (currentPage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("CurrentPage", currentPage));
        if (isPagination != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("IsPagination", isPagination));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call contactServiceDataAuditGetValidateBeforeCall(String startDate, Integer pageSize, Integer currentPage, Boolean isPagination, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = contactServiceDataAuditGetCall(startDate, pageSize, currentPage, isPagination, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Audit data
     * Sample request:                    GET /contact-service/data/audit
     * @param startDate  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @return AuditLogResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public AuditLogResponse contactServiceDataAuditGet(String startDate, Integer pageSize, Integer currentPage, Boolean isPagination) throws ApiException {
        ApiResponse<AuditLogResponse> resp = contactServiceDataAuditGetWithHttpInfo(startDate, pageSize, currentPage, isPagination);
        return resp.getData();
    }

    /**
     * Get Audit data
     * Sample request:                    GET /contact-service/data/audit
     * @param startDate  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @return ApiResponse&lt;AuditLogResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<AuditLogResponse> contactServiceDataAuditGetWithHttpInfo(String startDate, Integer pageSize, Integer currentPage, Boolean isPagination) throws ApiException {
        com.squareup.okhttp.Call call = contactServiceDataAuditGetValidateBeforeCall(startDate, pageSize, currentPage, isPagination, null, null);
        Type localVarReturnType = new TypeToken<AuditLogResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Audit data (asynchronously)
     * Sample request:                    GET /contact-service/data/audit
     * @param startDate  (optional)
     * @param pageSize  (optional)
     * @param currentPage  (optional)
     * @param isPagination  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call contactServiceDataAuditGetAsync(String startDate, Integer pageSize, Integer currentPage, Boolean isPagination, final ApiCallback<AuditLogResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = contactServiceDataAuditGetValidateBeforeCall(startDate, pageSize, currentPage, isPagination, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<AuditLogResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for contactServiceDataOrgReportGet
     * @param lastModifiedDate  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call contactServiceDataOrgReportGetCall(String lastModifiedDate, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/contact-service/data/org-report";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (lastModifiedDate != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("last-modified-date", lastModifiedDate));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call contactServiceDataOrgReportGetValidateBeforeCall(String lastModifiedDate, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = contactServiceDataOrgReportGetCall(lastModifiedDate, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get org contact details report
     * Sample request:                    GET contact-service/data/org-report
     * @param lastModifiedDate  (optional)
     * @return List&lt;ModifiedOrgContactInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<ModifiedOrgContactInfo> contactServiceDataOrgReportGet(String lastModifiedDate) throws ApiException {
        ApiResponse<List<ModifiedOrgContactInfo>> resp = contactServiceDataOrgReportGetWithHttpInfo(lastModifiedDate);
        return resp.getData();
    }

    /**
     * Get org contact details report
     * Sample request:                    GET contact-service/data/org-report
     * @param lastModifiedDate  (optional)
     * @return ApiResponse&lt;List&lt;ModifiedOrgContactInfo&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<ModifiedOrgContactInfo>> contactServiceDataOrgReportGetWithHttpInfo(String lastModifiedDate) throws ApiException {
        com.squareup.okhttp.Call call = contactServiceDataOrgReportGetValidateBeforeCall(lastModifiedDate, null, null);
        Type localVarReturnType = new TypeToken<List<ModifiedOrgContactInfo>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get org contact details report (asynchronously)
     * Sample request:                    GET contact-service/data/org-report
     * @param lastModifiedDate  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call contactServiceDataOrgReportGetAsync(String lastModifiedDate, final ApiCallback<List<ModifiedOrgContactInfo>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = contactServiceDataOrgReportGetValidateBeforeCall(lastModifiedDate, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<ModifiedOrgContactInfo>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for contactServiceDataSiteReportGet
     * @param lastModifiedDate  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call contactServiceDataSiteReportGetCall(String lastModifiedDate, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/contact-service/data/site-report";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (lastModifiedDate != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("last-modified-date", lastModifiedDate));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call contactServiceDataSiteReportGetValidateBeforeCall(String lastModifiedDate, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = contactServiceDataSiteReportGetCall(lastModifiedDate, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get site contact details report
     * Sample request:                    GET contact-service/data/site-report
     * @param lastModifiedDate  (optional)
     * @return List&lt;ModifiedSiteContactInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<ModifiedSiteContactInfo> contactServiceDataSiteReportGet(String lastModifiedDate) throws ApiException {
        ApiResponse<List<ModifiedSiteContactInfo>> resp = contactServiceDataSiteReportGetWithHttpInfo(lastModifiedDate);
        return resp.getData();
    }

    /**
     * Get site contact details report
     * Sample request:                    GET contact-service/data/site-report
     * @param lastModifiedDate  (optional)
     * @return ApiResponse&lt;List&lt;ModifiedSiteContactInfo&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<ModifiedSiteContactInfo>> contactServiceDataSiteReportGetWithHttpInfo(String lastModifiedDate) throws ApiException {
        com.squareup.okhttp.Call call = contactServiceDataSiteReportGetValidateBeforeCall(lastModifiedDate, null, null);
        Type localVarReturnType = new TypeToken<List<ModifiedSiteContactInfo>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get site contact details report (asynchronously)
     * Sample request:                    GET contact-service/data/site-report
     * @param lastModifiedDate  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call contactServiceDataSiteReportGetAsync(String lastModifiedDate, final ApiCallback<List<ModifiedSiteContactInfo>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = contactServiceDataSiteReportGetValidateBeforeCall(lastModifiedDate, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<ModifiedSiteContactInfo>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for contactServiceDataUserReportGet
     * @param lastModifiedDate  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call contactServiceDataUserReportGetCall(String lastModifiedDate, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/contact-service/data/user-report";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (lastModifiedDate != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("last-modified-date", lastModifiedDate));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "ApiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call contactServiceDataUserReportGetValidateBeforeCall(String lastModifiedDate, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = contactServiceDataUserReportGetCall(lastModifiedDate, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get user contact details report
     * Sample request:                    GET contact-service/data/user-report
     * @param lastModifiedDate  (optional)
     * @return List&lt;ModifiedUserContactInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<ModifiedUserContactInfo> contactServiceDataUserReportGet(String lastModifiedDate) throws ApiException {
        ApiResponse<List<ModifiedUserContactInfo>> resp = contactServiceDataUserReportGetWithHttpInfo(lastModifiedDate);
        return resp.getData();
    }

    /**
     * Get user contact details report
     * Sample request:                    GET contact-service/data/user-report
     * @param lastModifiedDate  (optional)
     * @return ApiResponse&lt;List&lt;ModifiedUserContactInfo&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<ModifiedUserContactInfo>> contactServiceDataUserReportGetWithHttpInfo(String lastModifiedDate) throws ApiException {
        com.squareup.okhttp.Call call = contactServiceDataUserReportGetValidateBeforeCall(lastModifiedDate, null, null);
        Type localVarReturnType = new TypeToken<List<ModifiedUserContactInfo>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get user contact details report (asynchronously)
     * Sample request:                    GET contact-service/data/user-report
     * @param lastModifiedDate  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call contactServiceDataUserReportGetAsync(String lastModifiedDate, final ApiCallback<List<ModifiedUserContactInfo>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = contactServiceDataUserReportGetValidateBeforeCall(lastModifiedDate, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<ModifiedUserContactInfo>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
