/*
 * CcsSso.OrganisationApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uk.gov.ccs.swagger.sso.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import uk.gov.ccs.swagger.sso.model.Assembly;
import uk.gov.ccs.swagger.sso.model.CustomAttributeData;
import uk.gov.ccs.swagger.sso.model.ModuleHandle;
/**
 * Module
 */


public class Module {
  @SerializedName("assembly")
  private Assembly assembly = null;

  @SerializedName("fullyQualifiedName")
  private String fullyQualifiedName = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("mdStreamVersion")
  private Integer mdStreamVersion = null;

  @SerializedName("moduleVersionId")
  private UUID moduleVersionId = null;

  @SerializedName("scopeName")
  private String scopeName = null;

  @SerializedName("moduleHandle")
  private ModuleHandle moduleHandle = null;

  @SerializedName("customAttributes")
  private List<CustomAttributeData> customAttributes = null;

  @SerializedName("metadataToken")
  private Integer metadataToken = null;

  public Module assembly(Assembly assembly) {
    this.assembly = assembly;
    return this;
  }

   /**
   * Get assembly
   * @return assembly
  **/
  @Schema(description = "")
  public Assembly getAssembly() {
    return assembly;
  }

  public void setAssembly(Assembly assembly) {
    this.assembly = assembly;
  }

   /**
   * Get fullyQualifiedName
   * @return fullyQualifiedName
  **/
  @Schema(description = "")
  public String getFullyQualifiedName() {
    return fullyQualifiedName;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

   /**
   * Get mdStreamVersion
   * @return mdStreamVersion
  **/
  @Schema(description = "")
  public Integer getMdStreamVersion() {
    return mdStreamVersion;
  }

   /**
   * Get moduleVersionId
   * @return moduleVersionId
  **/
  @Schema(description = "")
  public UUID getModuleVersionId() {
    return moduleVersionId;
  }

   /**
   * Get scopeName
   * @return scopeName
  **/
  @Schema(description = "")
  public String getScopeName() {
    return scopeName;
  }

  public Module moduleHandle(ModuleHandle moduleHandle) {
    this.moduleHandle = moduleHandle;
    return this;
  }

   /**
   * Get moduleHandle
   * @return moduleHandle
  **/
  @Schema(description = "")
  public ModuleHandle getModuleHandle() {
    return moduleHandle;
  }

  public void setModuleHandle(ModuleHandle moduleHandle) {
    this.moduleHandle = moduleHandle;
  }

   /**
   * Get customAttributes
   * @return customAttributes
  **/
  @Schema(description = "")
  public List<CustomAttributeData> getCustomAttributes() {
    return customAttributes;
  }

   /**
   * Get metadataToken
   * @return metadataToken
  **/
  @Schema(description = "")
  public Integer getMetadataToken() {
    return metadataToken;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Module module = (Module) o;
    return Objects.equals(this.assembly, module.assembly) &&
        Objects.equals(this.fullyQualifiedName, module.fullyQualifiedName) &&
        Objects.equals(this.name, module.name) &&
        Objects.equals(this.mdStreamVersion, module.mdStreamVersion) &&
        Objects.equals(this.moduleVersionId, module.moduleVersionId) &&
        Objects.equals(this.scopeName, module.scopeName) &&
        Objects.equals(this.moduleHandle, module.moduleHandle) &&
        Objects.equals(this.customAttributes, module.customAttributes) &&
        Objects.equals(this.metadataToken, module.metadataToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assembly, fullyQualifiedName, name, mdStreamVersion, moduleVersionId, scopeName, moduleHandle, customAttributes, metadataToken);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Module {\n");
    
    sb.append("    assembly: ").append(toIndentedString(assembly)).append("\n");
    sb.append("    fullyQualifiedName: ").append(toIndentedString(fullyQualifiedName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    mdStreamVersion: ").append(toIndentedString(mdStreamVersion)).append("\n");
    sb.append("    moduleVersionId: ").append(toIndentedString(moduleVersionId)).append("\n");
    sb.append("    scopeName: ").append(toIndentedString(scopeName)).append("\n");
    sb.append("    moduleHandle: ").append(toIndentedString(moduleHandle)).append("\n");
    sb.append("    customAttributes: ").append(toIndentedString(customAttributes)).append("\n");
    sb.append("    metadataToken: ").append(toIndentedString(metadataToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
