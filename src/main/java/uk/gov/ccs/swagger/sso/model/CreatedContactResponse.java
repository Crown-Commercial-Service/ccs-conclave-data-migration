/*
 * CcsSso.ContactApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uk.gov.ccs.swagger.sso.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * CreatedContactResponse
 */


public class CreatedContactResponse {
  @SerializedName("contactPointId")
  private Integer contactPointId = null;

  @SerializedName("nonUserContactPointId")
  private Integer nonUserContactPointId = null;

  @SerializedName("contactDetailId")
  private Integer contactDetailId = null;

  @SerializedName("siteContactId")
  private Integer siteContactId = null;

  @SerializedName("virtualIdList")
  private List<Integer> virtualIdList = null;

  public CreatedContactResponse contactPointId(Integer contactPointId) {
    this.contactPointId = contactPointId;
    return this;
  }

   /**
   * Get contactPointId
   * @return contactPointId
  **/
  @Schema(description = "")
  public Integer getContactPointId() {
    return contactPointId;
  }

  public void setContactPointId(Integer contactPointId) {
    this.contactPointId = contactPointId;
  }

  public CreatedContactResponse nonUserContactPointId(Integer nonUserContactPointId) {
    this.nonUserContactPointId = nonUserContactPointId;
    return this;
  }

   /**
   * Get nonUserContactPointId
   * @return nonUserContactPointId
  **/
  @Schema(description = "")
  public Integer getNonUserContactPointId() {
    return nonUserContactPointId;
  }

  public void setNonUserContactPointId(Integer nonUserContactPointId) {
    this.nonUserContactPointId = nonUserContactPointId;
  }

  public CreatedContactResponse contactDetailId(Integer contactDetailId) {
    this.contactDetailId = contactDetailId;
    return this;
  }

   /**
   * Get contactDetailId
   * @return contactDetailId
  **/
  @Schema(description = "")
  public Integer getContactDetailId() {
    return contactDetailId;
  }

  public void setContactDetailId(Integer contactDetailId) {
    this.contactDetailId = contactDetailId;
  }

  public CreatedContactResponse siteContactId(Integer siteContactId) {
    this.siteContactId = siteContactId;
    return this;
  }

   /**
   * Get siteContactId
   * @return siteContactId
  **/
  @Schema(description = "")
  public Integer getSiteContactId() {
    return siteContactId;
  }

  public void setSiteContactId(Integer siteContactId) {
    this.siteContactId = siteContactId;
  }

  public CreatedContactResponse virtualIdList(List<Integer> virtualIdList) {
    this.virtualIdList = virtualIdList;
    return this;
  }

  public CreatedContactResponse addVirtualIdListItem(Integer virtualIdListItem) {
    if (this.virtualIdList == null) {
      this.virtualIdList = new ArrayList<Integer>();
    }
    this.virtualIdList.add(virtualIdListItem);
    return this;
  }

   /**
   * Get virtualIdList
   * @return virtualIdList
  **/
  @Schema(description = "")
  public List<Integer> getVirtualIdList() {
    return virtualIdList;
  }

  public void setVirtualIdList(List<Integer> virtualIdList) {
    this.virtualIdList = virtualIdList;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatedContactResponse createdContactResponse = (CreatedContactResponse) o;
    return Objects.equals(this.contactPointId, createdContactResponse.contactPointId) &&
        Objects.equals(this.nonUserContactPointId, createdContactResponse.nonUserContactPointId) &&
        Objects.equals(this.contactDetailId, createdContactResponse.contactDetailId) &&
        Objects.equals(this.siteContactId, createdContactResponse.siteContactId) &&
        Objects.equals(this.virtualIdList, createdContactResponse.virtualIdList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contactPointId, nonUserContactPointId, contactDetailId, siteContactId, virtualIdList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatedContactResponse {\n");
    
    sb.append("    contactPointId: ").append(toIndentedString(contactPointId)).append("\n");
    sb.append("    nonUserContactPointId: ").append(toIndentedString(nonUserContactPointId)).append("\n");
    sb.append("    contactDetailId: ").append(toIndentedString(contactDetailId)).append("\n");
    sb.append("    siteContactId: ").append(toIndentedString(siteContactId)).append("\n");
    sb.append("    virtualIdList: ").append(toIndentedString(virtualIdList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
